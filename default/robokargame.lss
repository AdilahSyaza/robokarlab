
robokargame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000011a  00800100  000011e4  00001278  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011e4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000389  0080021a  0080021a  00001392  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00001392  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000013a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  000013e8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001453  00000000  00000000  00001530  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000815  00000000  00000000  00002983  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009f4  00000000  00000000  00003198  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000064  00000000  00000000  00003b8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000621  00000000  00000000  00003bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000a0  00000000  00000000  00004211  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  000042b1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 2f 04 	jmp	0x85e	; 0x85e <OSTickISR>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e4 ee       	ldi	r30, 0xE4	; 228
      7c:	f1 e1       	ldi	r31, 0x11	; 17
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	aa 31       	cpi	r26, 0x1A	; 26
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	25 e0       	ldi	r18, 0x05	; 5
      8c:	aa e1       	ldi	r26, 0x1A	; 26
      8e:	b2 e0       	ldi	r27, 0x02	; 2
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a3 3a       	cpi	r26, 0xA3	; 163
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 68 08 	call	0x10d0	; 0x10d0 <main>
      9e:	0c 94 f0 08 	jmp	0x11e0	; 0x11e0 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <CheckCollision>:
void CheckCollision (void *data)
{
 for(;;)
 {
  if ( (robo_proxSensor() == 1) ) /* obstacle? */
     myrobot.obstacle = 1; /* signal obstacle present */
      a6:	c1 e0       	ldi	r28, 0x01	; 1
/*------High pririority task----------*/
void CheckCollision (void *data)
{
 for(;;)
 {
  if ( (robo_proxSensor() == 1) ) /* obstacle? */
      a8:	0e 94 31 02 	call	0x462	; 0x462 <robo_proxSensor>
      ac:	01 97       	sbiw	r24, 0x01	; 1
      ae:	51 f4       	brne	.+20     	; 0xc4 <CheckCollision+0x1e>
     myrobot.obstacle = 1; /* signal obstacle present */
      b0:	c0 93 9e 02 	sts	0x029E, r28	; 0x80029e <myrobot+0x4>
 else
     myrobot.obstacle = 0; /* signal no obstacle */

 OSTimeDlyHMSM(0, 0, 0, 100); /* Task period ~ 100 ms */
      b4:	24 e6       	ldi	r18, 0x64	; 100
      b6:	30 e0       	ldi	r19, 0x00	; 0
      b8:	40 e0       	ldi	r20, 0x00	; 0
      ba:	60 e0       	ldi	r22, 0x00	; 0
      bc:	80 e0       	ldi	r24, 0x00	; 0
      be:	0e 94 fd 07 	call	0xffa	; 0xffa <OSTimeDlyHMSM>
/*------High pririority task----------*/
void CheckCollision (void *data)
{
 for(;;)
 {
  if ( (robo_proxSensor() == 1) ) /* obstacle? */
      c2:	f2 cf       	rjmp	.-28     	; 0xa8 <CheckCollision+0x2>
     myrobot.obstacle = 1; /* signal obstacle present */
 else
     myrobot.obstacle = 0; /* signal no obstacle */
      c4:	10 92 9e 02 	sts	0x029E, r1	; 0x80029e <myrobot+0x4>
      c8:	f5 cf       	rjmp	.-22     	; 0xb4 <CheckCollision+0xe>

000000ca <CntrlMotors>:

 for(;;)
 {
  speed_r = myrobot.rspeed;
  speed_l = myrobot.lspeed;
  robo_motorSpeed(speed_l, speed_r);
      ca:	60 91 9a 02 	lds	r22, 0x029A	; 0x80029a <myrobot>
      ce:	70 91 9b 02 	lds	r23, 0x029B	; 0x80029b <myrobot+0x1>
      d2:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <myrobot+0x2>
      d6:	90 91 9d 02 	lds	r25, 0x029D	; 0x80029d <myrobot+0x3>
      da:	0e 94 d6 01 	call	0x3ac	; 0x3ac <robo_motorSpeed>
  OSTimeDlyHMSM(0, 0, 0, 10); /* Task period ~ 250 ms */
      de:	2a e0       	ldi	r18, 0x0A	; 10
      e0:	30 e0       	ldi	r19, 0x00	; 0
      e2:	40 e0       	ldi	r20, 0x00	; 0
      e4:	60 e0       	ldi	r22, 0x00	; 0
      e6:	80 e0       	ldi	r24, 0x00	; 0
      e8:	0e 94 fd 07 	call	0xffa	; 0xffa <OSTimeDlyHMSM>
      ec:	ee cf       	rjmp	.-36     	; 0xca <CntrlMotors>

000000ee <Navig>:
  

	// for light sensor
	  if (robo_lightSensor() > 80) /* it is too bright, I'm photophobia */
	  {
	   myrobot.rspeed = -LOW_SPEED; /* turn right to avoid */
      ee:	0d ed       	ldi	r16, 0xDD	; 221
      f0:	1f ef       	ldi	r17, 0xFF	; 255
	   myrobot.lspeed = LOW_SPEED;
      f2:	83 e2       	ldi	r24, 0x23	; 35
      f4:	e8 2e       	mov	r14, r24
      f6:	f1 2c       	mov	r15, r1
	  	
	    myrobot.rspeed = -LOW_SPEED; 
	    myrobot.lspeed = -LOW_SPEED; /* stranded straight */

		myrobot.rspeed = -LOW_SPEED;
		myrobot.lspeed = MEDIUM_SPEED;
      f8:	c7 e3       	ldi	r28, 0x37	; 55
      fa:	d0 e0       	ldi	r29, 0x00	; 0
	  {
	    myrobot.rspeed = MEDIUM_SPEED; /* turn left */
	   myrobot.lspeed = -MEDIUM_SPEED;
	  }else if (robo_lineSensor() == 4)
	  {
	    myrobot.rspeed = -MEDIUM_SPEED; 
      fc:	99 ec       	ldi	r25, 0xC9	; 201
      fe:	c9 2e       	mov	r12, r25
     100:	dd 24       	eor	r13, r13
     102:	da 94       	dec	r13
void Navig (void *data)
{

 for (;;)
 {
  if (myrobot.obstacle == 1) /* If blocked then reverse */
     104:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <myrobot+0x4>
     108:	81 30       	cpi	r24, 0x01	; 1
     10a:	81 f4       	brne	.+32     	; 0x12c <Navig+0x3e>
  {
   myrobot.rspeed = -LOW_SPEED; /* REVERSE */
     10c:	10 93 9b 02 	sts	0x029B, r17	; 0x80029b <myrobot+0x1>
     110:	00 93 9a 02 	sts	0x029A, r16	; 0x80029a <myrobot>
   myrobot.lspeed = -LOW_SPEED;
     114:	10 93 9d 02 	sts	0x029D, r17	; 0x80029d <myrobot+0x3>
     118:	00 93 9c 02 	sts	0x029C, r16	; 0x80029c <myrobot+0x2>
	  }else{
	  }
  }
  

	OSTimeDlyHMSM(0, 0, 0, 10);
     11c:	2a e0       	ldi	r18, 0x0A	; 10
     11e:	30 e0       	ldi	r19, 0x00	; 0
     120:	40 e0       	ldi	r20, 0x00	; 0
     122:	60 e0       	ldi	r22, 0x00	; 0
     124:	80 e0       	ldi	r24, 0x00	; 0
     126:	0e 94 fd 07 	call	0xffa	; 0xffa <OSTimeDlyHMSM>
void Navig (void *data)
{

 for (;;)
 {
  if (myrobot.obstacle == 1) /* If blocked then reverse */
     12a:	ec cf       	rjmp	.-40     	; 0x104 <Navig+0x16>
  {
   myrobot.rspeed = -LOW_SPEED; /* REVERSE */
   myrobot.lspeed = -LOW_SPEED;
  }else{
  	  if (robo_lineSensor() == 2) /* go straight */
     12c:	0e 94 54 02 	call	0x4a8	; 0x4a8 <robo_lineSensor>
     130:	02 97       	sbiw	r24, 0x02	; 2
     132:	49 f4       	brne	.+18     	; 0x146 <Navig+0x58>
	  {
	   myrobot.rspeed = MEDIUM_SPEED;
     134:	d0 93 9b 02 	sts	0x029B, r29	; 0x80029b <myrobot+0x1>
     138:	c0 93 9a 02 	sts	0x029A, r28	; 0x80029a <myrobot>
	  	
	    myrobot.rspeed = -LOW_SPEED; 
	    myrobot.lspeed = -LOW_SPEED; /* stranded straight */

		myrobot.rspeed = -LOW_SPEED;
		myrobot.lspeed = MEDIUM_SPEED;
     13c:	d0 93 9d 02 	sts	0x029D, r29	; 0x80029d <myrobot+0x3>
     140:	c0 93 9c 02 	sts	0x029C, r28	; 0x80029c <myrobot+0x2>
     144:	0c c0       	rjmp	.+24     	; 0x15e <Navig+0x70>
  }else{
  	  if (robo_lineSensor() == 2) /* go straight */
	  {
	   myrobot.rspeed = MEDIUM_SPEED;
	   myrobot.lspeed = MEDIUM_SPEED;
	  }else if (robo_lineSensor() == 1)
     146:	0e 94 54 02 	call	0x4a8	; 0x4a8 <robo_lineSensor>
     14a:	01 97       	sbiw	r24, 0x01	; 1
     14c:	b1 f4       	brne	.+44     	; 0x17a <Navig+0x8c>
	  {
	    myrobot.rspeed = MEDIUM_SPEED; /* turn left */
     14e:	d0 93 9b 02 	sts	0x029B, r29	; 0x80029b <myrobot+0x1>
     152:	c0 93 9a 02 	sts	0x029A, r28	; 0x80029a <myrobot>
	   myrobot.lspeed = -MEDIUM_SPEED;
     156:	d0 92 9d 02 	sts	0x029D, r13	; 0x80029d <myrobot+0x3>
     15a:	c0 92 9c 02 	sts	0x029C, r12	; 0x80029c <myrobot+0x2>
		
	  }
  

	// for light sensor
	  if (robo_lightSensor() > 80) /* it is too bright, I'm photophobia */
     15e:	0e 94 3d 02 	call	0x47a	; 0x47a <robo_lightSensor>
     162:	81 35       	cpi	r24, 0x51	; 81
     164:	91 05       	cpc	r25, r1
     166:	d4 f2       	brlt	.-76     	; 0x11c <Navig+0x2e>
	  {
	   myrobot.rspeed = -LOW_SPEED; /* turn right to avoid */
     168:	10 93 9b 02 	sts	0x029B, r17	; 0x80029b <myrobot+0x1>
     16c:	00 93 9a 02 	sts	0x029A, r16	; 0x80029a <myrobot>
	   myrobot.lspeed = LOW_SPEED;
     170:	f0 92 9d 02 	sts	0x029D, r15	; 0x80029d <myrobot+0x3>
     174:	e0 92 9c 02 	sts	0x029C, r14	; 0x80029c <myrobot+0x2>
     178:	d1 cf       	rjmp	.-94     	; 0x11c <Navig+0x2e>
	   myrobot.lspeed = MEDIUM_SPEED;
	  }else if (robo_lineSensor() == 1)
	  {
	    myrobot.rspeed = MEDIUM_SPEED; /* turn left */
	   myrobot.lspeed = -MEDIUM_SPEED;
	  }else if (robo_lineSensor() == 4)
     17a:	0e 94 54 02 	call	0x4a8	; 0x4a8 <robo_lineSensor>
     17e:	04 97       	sbiw	r24, 0x04	; 4
     180:	29 f4       	brne	.+10     	; 0x18c <Navig+0x9e>
	  {
	    myrobot.rspeed = -MEDIUM_SPEED; 
     182:	d0 92 9b 02 	sts	0x029B, r13	; 0x80029b <myrobot+0x1>
     186:	c0 92 9a 02 	sts	0x029A, r12	; 0x80029a <myrobot>
     18a:	d8 cf       	rjmp	.-80     	; 0x13c <Navig+0x4e>
	   myrobot.lspeed = MEDIUM_SPEED; /* turn right */
	  }else if (robo_lineSensor() == 3)
     18c:	0e 94 54 02 	call	0x4a8	; 0x4a8 <robo_lineSensor>
     190:	03 97       	sbiw	r24, 0x03	; 3
     192:	49 f4       	brne	.+18     	; 0x1a6 <Navig+0xb8>
	  {
	    myrobot.rspeed = MEDIUM_SPEED; 
     194:	d0 93 9b 02 	sts	0x029B, r29	; 0x80029b <myrobot+0x1>
     198:	c0 93 9a 02 	sts	0x029A, r28	; 0x80029a <myrobot>
	   myrobot.lspeed = LOW_SPEED; /* corner left */
     19c:	f0 92 9d 02 	sts	0x029D, r15	; 0x80029d <myrobot+0x3>
     1a0:	e0 92 9c 02 	sts	0x029C, r14	; 0x80029c <myrobot+0x2>
     1a4:	dc cf       	rjmp	.-72     	; 0x15e <Navig+0x70>

	  }else if (robo_lineSensor() == 6)
     1a6:	0e 94 54 02 	call	0x4a8	; 0x4a8 <robo_lineSensor>
     1aa:	06 97       	sbiw	r24, 0x06	; 6
     1ac:	29 f4       	brne	.+10     	; 0x1b8 <Navig+0xca>
	  {
	    myrobot.rspeed = LOW_SPEED; 
     1ae:	f0 92 9b 02 	sts	0x029B, r15	; 0x80029b <myrobot+0x1>
     1b2:	e0 92 9a 02 	sts	0x029A, r14	; 0x80029a <myrobot>
     1b6:	c2 cf       	rjmp	.-124    	; 0x13c <Navig+0x4e>
	   myrobot.lspeed = MEDIUM_SPEED; /* corner right */
	  }else if (robo_lineSensor() == 0)
     1b8:	0e 94 54 02 	call	0x4a8	; 0x4a8 <robo_lineSensor>
     1bc:	89 2b       	or	r24, r25
     1be:	79 f6       	brne	.-98     	; 0x15e <Navig+0x70>
	  {
	  	
	    myrobot.rspeed = -LOW_SPEED; 
     1c0:	10 93 9b 02 	sts	0x029B, r17	; 0x80029b <myrobot+0x1>
     1c4:	00 93 9a 02 	sts	0x029A, r16	; 0x80029a <myrobot>
     1c8:	b9 cf       	rjmp	.-142    	; 0x13c <Navig+0x4e>

000001ca <TaskStart>:

/*------Highest pririority task----------*/
/* Create all other tasks here */
void TaskStart( void *data )
{
 OS_ticks_init(); /* enable RTOS timer tick */
     1ca:	0e 94 a4 02 	call	0x548	; 0x548 <OS_ticks_init>

 OSTaskCreate(CheckCollision , /* Task function */
     1ce:	22 e0       	ldi	r18, 0x02	; 2
     1d0:	49 e9       	ldi	r20, 0x99	; 153
     1d2:	52 e0       	ldi	r21, 0x02	; 2
     1d4:	70 e0       	ldi	r23, 0x00	; 0
     1d6:	60 e0       	ldi	r22, 0x00	; 0
     1d8:	83 e5       	ldi	r24, 0x53	; 83
     1da:	90 e0       	ldi	r25, 0x00	; 0
     1dc:	0e 94 ac 06 	call	0xd58	; 0xd58 <OSTaskCreate>
 (void *)0, /* nothing passed to task */
 (void *)&ChkCollideStk[TASK_STK_SZ - 1], /* stack allocated to task */
 TASK_CHKCOLLIDE_PRIO); /* priority of task */

 OSTaskCreate(CntrlMotors , /* Task function */
     1e0:	23 e0       	ldi	r18, 0x03	; 3
     1e2:	4e e1       	ldi	r20, 0x1E	; 30
     1e4:	53 e0       	ldi	r21, 0x03	; 3
     1e6:	70 e0       	ldi	r23, 0x00	; 0
     1e8:	60 e0       	ldi	r22, 0x00	; 0
     1ea:	85 e6       	ldi	r24, 0x65	; 101
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	0e 94 ac 06 	call	0xd58	; 0xd58 <OSTaskCreate>
 (void *)0, /* nothing passed to task */
 (void *)&CtrlmotorStk[TASK_STK_SZ - 1], /* stack allocated to task */
 TASK_CTRLMOTOR_PRIO); /* priority of task */

 OSTaskCreate(Navig, /* Task function */
     1f2:	24 e0       	ldi	r18, 0x04	; 4
     1f4:	4e e1       	ldi	r20, 0x1E	; 30
     1f6:	54 e0       	ldi	r21, 0x04	; 4
     1f8:	70 e0       	ldi	r23, 0x00	; 0
     1fa:	60 e0       	ldi	r22, 0x00	; 0
     1fc:	87 e7       	ldi	r24, 0x77	; 119
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	0e 94 ac 06 	call	0xd58	; 0xd58 <OSTaskCreate>
 TASK_NAVIG_PRIO); /* priority of task */

 while(1)
 {
  OSTimeDlyHMSM(0, 0, 5, 0); /* Task period ~ 5 secs, argument position: HOURS, MINUTES, SECONDS, and MILLISECONDS S*/ 
  robo_LED_toggle(); /* Show that we are alive */
     204:	c1 e0       	ldi	r28, 0x01	; 1
 (void *)&NavigStk[TASK_STK_SZ - 1], /* stack allocated to task */
 TASK_NAVIG_PRIO); /* priority of task */

 while(1)
 {
  OSTimeDlyHMSM(0, 0, 5, 0); /* Task period ~ 5 secs, argument position: HOURS, MINUTES, SECONDS, and MILLISECONDS S*/ 
     206:	30 e0       	ldi	r19, 0x00	; 0
     208:	20 e0       	ldi	r18, 0x00	; 0
     20a:	45 e0       	ldi	r20, 0x05	; 5
     20c:	60 e0       	ldi	r22, 0x00	; 0
     20e:	80 e0       	ldi	r24, 0x00	; 0
     210:	0e 94 fd 07 	call	0xffa	; 0xffa <OSTimeDlyHMSM>
  robo_LED_toggle(); /* Show that we are alive */
     214:	85 b1       	in	r24, 0x05	; 5
     216:	8c 27       	eor	r24, r28
     218:	85 b9       	out	0x05, r24	; 5
     21a:	f5 cf       	rjmp	.-22     	; 0x206 <TaskStart+0x3c>

0000021c <ADC_init>:
     21c:	80 e4       	ldi	r24, 0x40	; 64
     21e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
     222:	86 e8       	ldi	r24, 0x86	; 134
     224:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     228:	08 95       	ret

0000022a <ADC_read>:
     22a:	f8 94       	cli
     22c:	80 64       	ori	r24, 0x40	; 64
     22e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
     232:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     236:	80 64       	ori	r24, 0x40	; 64
     238:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     23c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     240:	84 ff       	sbrs	r24, 4
     242:	fc cf       	rjmp	.-8      	; 0x23c <ADC_read+0x12>
     244:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     248:	80 61       	ori	r24, 0x10	; 16
     24a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     24e:	78 94       	sei
     250:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     254:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
     258:	93 70       	andi	r25, 0x03	; 3
     25a:	08 95       	ret

0000025c <PWM8_write>:
     25c:	81 11       	cpse	r24, r1
     25e:	05 c0       	rjmp	.+10     	; 0x26a <PWM8_write+0xe>
     260:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     264:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
     268:	08 95       	ret
     26a:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
     26e:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__DATA_REGION_ORIGIN__+0x2a>
     272:	08 95       	ret

00000274 <motor_init>:
     274:	8a b1       	in	r24, 0x0a	; 10
     276:	80 6f       	ori	r24, 0xF0	; 240
     278:	8a b9       	out	0x0a, r24	; 10
     27a:	8b b1       	in	r24, 0x0b	; 11
     27c:	8f 70       	andi	r24, 0x0F	; 15
     27e:	8b b9       	out	0x0b, r24	; 11
     280:	81 ea       	ldi	r24, 0xA1	; 161
     282:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
     286:	83 e0       	ldi	r24, 0x03	; 3
     288:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     28c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     290:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     294:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     298:	a8 e8       	ldi	r26, 0x88	; 136
     29a:	b0 e0       	ldi	r27, 0x00	; 0
     29c:	1c 92       	st	X, r1
     29e:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
     2a2:	ea e8       	ldi	r30, 0x8A	; 138
     2a4:	f0 e0       	ldi	r31, 0x00	; 0
     2a6:	10 82       	st	Z, r1
     2a8:	84 b1       	in	r24, 0x04	; 4
     2aa:	86 60       	ori	r24, 0x06	; 6
     2ac:	84 b9       	out	0x04, r24	; 4
     2ae:	11 96       	adiw	r26, 0x01	; 1
     2b0:	1c 92       	st	X, r1
     2b2:	1e 92       	st	-X, r1
     2b4:	11 82       	std	Z+1, r1	; 0x01
     2b6:	10 82       	st	Z, r1
     2b8:	08 95       	ret

000002ba <motor_set_speed>:
     2ba:	77 ff       	sbrs	r23, 7
     2bc:	02 c0       	rjmp	.+4      	; 0x2c2 <motor_set_speed+0x8>
     2be:	70 e0       	ldi	r23, 0x00	; 0
     2c0:	60 e0       	ldi	r22, 0x00	; 0
     2c2:	65 36       	cpi	r22, 0x65	; 101
     2c4:	71 05       	cpc	r23, r1
     2c6:	14 f0       	brlt	.+4      	; 0x2cc <motor_set_speed+0x12>
     2c8:	64 e6       	ldi	r22, 0x64	; 100
     2ca:	70 e0       	ldi	r23, 0x00	; 0
     2cc:	9b 01       	movw	r18, r22
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	75 95       	asr	r23
     2d4:	67 95       	ror	r22
     2d6:	62 0f       	add	r22, r18
     2d8:	73 1f       	adc	r23, r19
     2da:	81 11       	cpse	r24, r1
     2dc:	09 c0       	rjmp	.+18     	; 0x2f0 <motor_set_speed+0x36>
     2de:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
     2e2:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__DATA_REGION_ORIGIN__+0x2a>
     2e6:	70 93 20 04 	sts	0x0420, r23	; 0x800420 <rightWst+0x1>
     2ea:	60 93 1f 04 	sts	0x041F, r22	; 0x80041f <rightWst>
     2ee:	08 95       	ret
     2f0:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     2f4:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
     2f8:	70 93 24 04 	sts	0x0424, r23	; 0x800424 <leftWst+0x1>
     2fc:	60 93 23 04 	sts	0x0423, r22	; 0x800423 <leftWst>
     300:	08 95       	ret

00000302 <motor_set_dir>:
     302:	cf 93       	push	r28
     304:	c6 2f       	mov	r28, r22
     306:	26 2f       	mov	r18, r22
     308:	30 e0       	ldi	r19, 0x00	; 0
     30a:	81 11       	cpse	r24, r1
     30c:	2b c0       	rjmp	.+86     	; 0x364 <motor_set_dir+0x62>
     30e:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <rightWst+0x2>
     312:	90 91 22 04 	lds	r25, 0x0422	; 0x800422 <rightWst+0x3>
     316:	82 17       	cp	r24, r18
     318:	93 07       	cpc	r25, r19
     31a:	59 f0       	breq	.+22     	; 0x332 <motor_set_dir+0x30>
     31c:	70 e0       	ldi	r23, 0x00	; 0
     31e:	60 e0       	ldi	r22, 0x00	; 0
     320:	80 e0       	ldi	r24, 0x00	; 0
     322:	0e 94 5d 01 	call	0x2ba	; 0x2ba <motor_set_speed>
     326:	8f e9       	ldi	r24, 0x9F	; 159
     328:	9f e0       	ldi	r25, 0x0F	; 15
     32a:	01 97       	sbiw	r24, 0x01	; 1
     32c:	f1 f7       	brne	.-4      	; 0x32a <motor_set_dir+0x28>
     32e:	00 c0       	rjmp	.+0      	; 0x330 <motor_set_dir+0x2e>
     330:	00 00       	nop
     332:	c1 11       	cpse	r28, r1
     334:	0e c0       	rjmp	.+28     	; 0x352 <motor_set_dir+0x50>
     336:	5e 98       	cbi	0x0b, 6	; 11
     338:	5f 9a       	sbi	0x0b, 7	; 11
     33a:	10 92 22 04 	sts	0x0422, r1	; 0x800422 <rightWst+0x3>
     33e:	10 92 21 04 	sts	0x0421, r1	; 0x800421 <rightWst+0x2>
     342:	8f e3       	ldi	r24, 0x3F	; 63
     344:	9c e9       	ldi	r25, 0x9C	; 156
     346:	01 97       	sbiw	r24, 0x01	; 1
     348:	f1 f7       	brne	.-4      	; 0x346 <motor_set_dir+0x44>
     34a:	00 c0       	rjmp	.+0      	; 0x34c <motor_set_dir+0x4a>
     34c:	00 00       	nop
     34e:	cf 91       	pop	r28
     350:	08 95       	ret
     352:	5e 9a       	sbi	0x0b, 6	; 11
     354:	5f 98       	cbi	0x0b, 7	; 11
     356:	81 e0       	ldi	r24, 0x01	; 1
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	90 93 22 04 	sts	0x0422, r25	; 0x800422 <rightWst+0x3>
     35e:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <rightWst+0x2>
     362:	ef cf       	rjmp	.-34     	; 0x342 <motor_set_dir+0x40>
     364:	80 91 25 04 	lds	r24, 0x0425	; 0x800425 <leftWst+0x2>
     368:	90 91 26 04 	lds	r25, 0x0426	; 0x800426 <leftWst+0x3>
     36c:	82 17       	cp	r24, r18
     36e:	93 07       	cpc	r25, r19
     370:	59 f0       	breq	.+22     	; 0x388 <motor_set_dir+0x86>
     372:	70 e0       	ldi	r23, 0x00	; 0
     374:	60 e0       	ldi	r22, 0x00	; 0
     376:	81 e0       	ldi	r24, 0x01	; 1
     378:	0e 94 5d 01 	call	0x2ba	; 0x2ba <motor_set_speed>
     37c:	8f e9       	ldi	r24, 0x9F	; 159
     37e:	9f e0       	ldi	r25, 0x0F	; 15
     380:	01 97       	sbiw	r24, 0x01	; 1
     382:	f1 f7       	brne	.-4      	; 0x380 <motor_set_dir+0x7e>
     384:	00 c0       	rjmp	.+0      	; 0x386 <motor_set_dir+0x84>
     386:	00 00       	nop
     388:	c1 11       	cpse	r28, r1
     38a:	07 c0       	rjmp	.+14     	; 0x39a <motor_set_dir+0x98>
     38c:	5c 9a       	sbi	0x0b, 4	; 11
     38e:	5d 98       	cbi	0x0b, 5	; 11
     390:	10 92 26 04 	sts	0x0426, r1	; 0x800426 <leftWst+0x3>
     394:	10 92 25 04 	sts	0x0425, r1	; 0x800425 <leftWst+0x2>
     398:	d4 cf       	rjmp	.-88     	; 0x342 <motor_set_dir+0x40>
     39a:	5c 98       	cbi	0x0b, 4	; 11
     39c:	5d 9a       	sbi	0x0b, 5	; 11
     39e:	81 e0       	ldi	r24, 0x01	; 1
     3a0:	90 e0       	ldi	r25, 0x00	; 0
     3a2:	90 93 26 04 	sts	0x0426, r25	; 0x800426 <leftWst+0x3>
     3a6:	80 93 25 04 	sts	0x0425, r24	; 0x800425 <leftWst+0x2>
     3aa:	cb cf       	rjmp	.-106    	; 0x342 <motor_set_dir+0x40>

000003ac <robo_motorSpeed>:
     3ac:	0f 93       	push	r16
     3ae:	1f 93       	push	r17
     3b0:	cf 93       	push	r28
     3b2:	df 93       	push	r29
     3b4:	ec 01       	movw	r28, r24
     3b6:	8b 01       	movw	r16, r22
     3b8:	97 ff       	sbrs	r25, 7
     3ba:	1c c0       	rjmp	.+56     	; 0x3f4 <robo_motorSpeed+0x48>
     3bc:	61 e0       	ldi	r22, 0x01	; 1
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	0e 94 81 01 	call	0x302	; 0x302 <motor_set_dir>
     3c4:	d1 95       	neg	r29
     3c6:	c1 95       	neg	r28
     3c8:	d1 09       	sbc	r29, r1
     3ca:	17 ff       	sbrs	r17, 7
     3cc:	18 c0       	rjmp	.+48     	; 0x3fe <robo_motorSpeed+0x52>
     3ce:	61 e0       	ldi	r22, 0x01	; 1
     3d0:	80 e0       	ldi	r24, 0x00	; 0
     3d2:	0e 94 81 01 	call	0x302	; 0x302 <motor_set_dir>
     3d6:	11 95       	neg	r17
     3d8:	01 95       	neg	r16
     3da:	11 09       	sbc	r17, r1
     3dc:	b8 01       	movw	r22, r16
     3de:	80 e0       	ldi	r24, 0x00	; 0
     3e0:	0e 94 5d 01 	call	0x2ba	; 0x2ba <motor_set_speed>
     3e4:	be 01       	movw	r22, r28
     3e6:	81 e0       	ldi	r24, 0x01	; 1
     3e8:	df 91       	pop	r29
     3ea:	cf 91       	pop	r28
     3ec:	1f 91       	pop	r17
     3ee:	0f 91       	pop	r16
     3f0:	0c 94 5d 01 	jmp	0x2ba	; 0x2ba <motor_set_speed>
     3f4:	60 e0       	ldi	r22, 0x00	; 0
     3f6:	81 e0       	ldi	r24, 0x01	; 1
     3f8:	0e 94 81 01 	call	0x302	; 0x302 <motor_set_dir>
     3fc:	e6 cf       	rjmp	.-52     	; 0x3ca <robo_motorSpeed+0x1e>
     3fe:	60 e0       	ldi	r22, 0x00	; 0
     400:	80 e0       	ldi	r24, 0x00	; 0
     402:	0e 94 81 01 	call	0x302	; 0x302 <motor_set_dir>
     406:	ea cf       	rjmp	.-44     	; 0x3dc <robo_motorSpeed+0x30>

00000408 <USART0_init>:
     408:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     40c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     410:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     414:	88 e1       	ldi	r24, 0x18	; 24
     416:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     41a:	86 e0       	ldi	r24, 0x06	; 6
     41c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     420:	08 95       	ret

00000422 <cputchar>:
     422:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     426:	95 ff       	sbrs	r25, 5
     428:	fc cf       	rjmp	.-8      	; 0x422 <cputchar>
     42a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     42e:	08 95       	ret

00000430 <cgetchar>:
     430:	cf 93       	push	r28
     432:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     436:	87 ff       	sbrs	r24, 7
     438:	fc cf       	rjmp	.-8      	; 0x432 <cgetchar+0x2>
     43a:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     43e:	8c 2f       	mov	r24, r28
     440:	0e 94 11 02 	call	0x422	; 0x422 <cputchar>
     444:	8c 2f       	mov	r24, r28
     446:	cf 91       	pop	r28
     448:	08 95       	ret

0000044a <cputs>:
     44a:	cf 93       	push	r28
     44c:	df 93       	push	r29
     44e:	ec 01       	movw	r28, r24
     450:	89 91       	ld	r24, Y+
     452:	81 11       	cpse	r24, r1
     454:	03 c0       	rjmp	.+6      	; 0x45c <cputs+0x12>
     456:	df 91       	pop	r29
     458:	cf 91       	pop	r28
     45a:	08 95       	ret
     45c:	0e 94 11 02 	call	0x422	; 0x422 <cputchar>
     460:	f7 cf       	rjmp	.-18     	; 0x450 <cputs+0x6>

00000462 <robo_proxSensor>:
     462:	80 e0       	ldi	r24, 0x00	; 0
     464:	0e 94 15 01 	call	0x22a	; 0x22a <ADC_read>
     468:	21 e0       	ldi	r18, 0x01	; 1
     46a:	30 e0       	ldi	r19, 0x00	; 0
     46c:	84 36       	cpi	r24, 0x64	; 100
     46e:	91 05       	cpc	r25, r1
     470:	10 f0       	brcs	.+4      	; 0x476 <robo_proxSensor+0x14>
     472:	30 e0       	ldi	r19, 0x00	; 0
     474:	20 e0       	ldi	r18, 0x00	; 0
     476:	c9 01       	movw	r24, r18
     478:	08 95       	ret

0000047a <robo_lightSensor>:
     47a:	84 e0       	ldi	r24, 0x04	; 4
     47c:	0e 94 15 01 	call	0x22a	; 0x22a <ADC_read>
     480:	2b ef       	ldi	r18, 0xFB	; 251
     482:	ac 01       	movw	r20, r24
     484:	24 03       	mulsu	r18, r20
     486:	c0 01       	movw	r24, r0
     488:	25 9f       	mul	r18, r21
     48a:	90 0d       	add	r25, r0
     48c:	11 24       	eor	r1, r1
     48e:	85 50       	subi	r24, 0x05	; 5
     490:	9c 4e       	sbci	r25, 0xEC	; 236
     492:	63 e3       	ldi	r22, 0x33	; 51
     494:	70 e0       	ldi	r23, 0x00	; 0
     496:	0e 94 a0 08 	call	0x1140	; 0x1140 <__divmodhi4>
     49a:	cb 01       	movw	r24, r22
     49c:	65 36       	cpi	r22, 0x65	; 101
     49e:	71 05       	cpc	r23, r1
     4a0:	14 f0       	brlt	.+4      	; 0x4a6 <robo_lightSensor+0x2c>
     4a2:	84 e6       	ldi	r24, 0x64	; 100
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	08 95       	ret

000004a8 <robo_lineSensor>:
     4a8:	cf 93       	push	r28
     4aa:	df 93       	push	r29
     4ac:	c0 e0       	ldi	r28, 0x00	; 0
     4ae:	d1 e0       	ldi	r29, 0x01	; 1
     4b0:	cc 0f       	add	r28, r28
     4b2:	8d 2f       	mov	r24, r29
     4b4:	0e 94 15 01 	call	0x22a	; 0x22a <ADC_read>
     4b8:	8c 32       	cpi	r24, 0x2C	; 44
     4ba:	91 40       	sbci	r25, 0x01	; 1
     4bc:	0c f4       	brge	.+2      	; 0x4c0 <robo_lineSensor+0x18>
     4be:	c1 60       	ori	r28, 0x01	; 1
     4c0:	df 5f       	subi	r29, 0xFF	; 255
     4c2:	d4 30       	cpi	r29, 0x04	; 4
     4c4:	a9 f7       	brne	.-22     	; 0x4b0 <robo_lineSensor+0x8>
     4c6:	8c 2f       	mov	r24, r28
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	df 91       	pop	r29
     4cc:	cf 91       	pop	r28
     4ce:	08 95       	ret

000004d0 <robo_bumpSensorR>:
     4d0:	83 b1       	in	r24, 0x03	; 3
     4d2:	82 95       	swap	r24
     4d4:	8f 70       	andi	r24, 0x0F	; 15
     4d6:	91 e0       	ldi	r25, 0x01	; 1
     4d8:	89 27       	eor	r24, r25
     4da:	81 70       	andi	r24, 0x01	; 1
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	08 95       	ret

000004e0 <robo_bumpSensorL>:
     4e0:	83 b1       	in	r24, 0x03	; 3
     4e2:	86 95       	lsr	r24
     4e4:	86 95       	lsr	r24
     4e6:	86 95       	lsr	r24
     4e8:	91 e0       	ldi	r25, 0x01	; 1
     4ea:	89 27       	eor	r24, r25
     4ec:	81 70       	andi	r24, 0x01	; 1
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	08 95       	ret

000004f2 <robo_Honk>:
     4f2:	5b 9a       	sbi	0x0b, 3	; 11
     4f4:	2f ef       	ldi	r18, 0xFF	; 255
     4f6:	85 ea       	ldi	r24, 0xA5	; 165
     4f8:	9e e0       	ldi	r25, 0x0E	; 14
     4fa:	21 50       	subi	r18, 0x01	; 1
     4fc:	80 40       	sbci	r24, 0x00	; 0
     4fe:	90 40       	sbci	r25, 0x00	; 0
     500:	e1 f7       	brne	.-8      	; 0x4fa <robo_Honk+0x8>
     502:	00 c0       	rjmp	.+0      	; 0x504 <robo_Honk+0x12>
     504:	00 00       	nop
     506:	5b 98       	cbi	0x0b, 3	; 11
     508:	2f ef       	ldi	r18, 0xFF	; 255
     50a:	85 ea       	ldi	r24, 0xA5	; 165
     50c:	9e e0       	ldi	r25, 0x0E	; 14
     50e:	21 50       	subi	r18, 0x01	; 1
     510:	80 40       	sbci	r24, 0x00	; 0
     512:	90 40       	sbci	r25, 0x00	; 0
     514:	e1 f7       	brne	.-8      	; 0x50e <robo_Honk+0x1c>
     516:	00 c0       	rjmp	.+0      	; 0x518 <robo_Honk+0x26>
     518:	00 00       	nop
     51a:	08 95       	ret

0000051c <robo_checkBattery>:
     51c:	85 e0       	ldi	r24, 0x05	; 5
     51e:	0e 94 15 01 	call	0x22a	; 0x22a <ADC_read>
     522:	84 3f       	cpi	r24, 0xF4	; 244
     524:	91 40       	sbci	r25, 0x01	; 1
     526:	10 f4       	brcc	.+4      	; 0x52c <robo_checkBattery+0x10>
     528:	28 9a       	sbi	0x05, 0	; 5
     52a:	08 95       	ret
     52c:	28 98       	cbi	0x05, 0	; 5
     52e:	08 95       	ret

00000530 <robo_goPressed>:
     530:	89 b1       	in	r24, 0x09	; 9
     532:	82 fb       	bst	r24, 2
     534:	88 27       	eor	r24, r24
     536:	80 f9       	bld	r24, 0
     538:	91 e0       	ldi	r25, 0x01	; 1
     53a:	89 27       	eor	r24, r25
     53c:	08 95       	ret

0000053e <robo_wait4goPress>:
     53e:	0e 94 98 02 	call	0x530	; 0x530 <robo_goPressed>
     542:	88 23       	and	r24, r24
     544:	e1 f3       	breq	.-8      	; 0x53e <robo_wait4goPress>
     546:	08 95       	ret

00000548 <OS_ticks_init>:
     548:	f8 94       	cli
     54a:	85 e0       	ldi	r24, 0x05	; 5
     54c:	85 bd       	out	0x25, r24	; 37
     54e:	81 e0       	ldi	r24, 0x01	; 1
     550:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
     554:	84 e6       	ldi	r24, 0x64	; 100
     556:	86 bd       	out	0x26, r24	; 38
     558:	78 94       	sei
     55a:	08 95       	ret

0000055c <HAL_init>:
     55c:	87 e6       	ldi	r24, 0x67	; 103
     55e:	0e 94 04 02 	call	0x408	; 0x408 <USART0_init>
     562:	0c 94 0e 01 	jmp	0x21c	; 0x21c <ADC_init>

00000566 <robo_Setup>:
     566:	0e 94 ae 02 	call	0x55c	; 0x55c <HAL_init>
     56a:	0e 94 3a 01 	call	0x274	; 0x274 <motor_init>
     56e:	53 9a       	sbi	0x0a, 3	; 10
     570:	5b 98       	cbi	0x0b, 3	; 11
     572:	20 9a       	sbi	0x04, 0	; 4
     574:	52 98       	cbi	0x0a, 2	; 10
     576:	5a 9a       	sbi	0x0b, 2	; 11
     578:	24 98       	cbi	0x04, 4	; 4
     57a:	23 98       	cbi	0x04, 3	; 4
     57c:	85 b1       	in	r24, 0x05	; 5
     57e:	88 61       	ori	r24, 0x18	; 24
     580:	85 b9       	out	0x05, r24	; 5
     582:	60 e0       	ldi	r22, 0x00	; 0
     584:	80 e0       	ldi	r24, 0x00	; 0
     586:	0e 94 81 01 	call	0x302	; 0x302 <motor_set_dir>
     58a:	60 e0       	ldi	r22, 0x00	; 0
     58c:	81 e0       	ldi	r24, 0x01	; 1
     58e:	0e 94 81 01 	call	0x302	; 0x302 <motor_set_dir>
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	60 e0       	ldi	r22, 0x00	; 0
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	80 e0       	ldi	r24, 0x00	; 0
     59a:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <robo_motorSpeed>

0000059e <cprintf>:
     59e:	4f 92       	push	r4
     5a0:	5f 92       	push	r5
     5a2:	6f 92       	push	r6
     5a4:	7f 92       	push	r7
     5a6:	8f 92       	push	r8
     5a8:	9f 92       	push	r9
     5aa:	af 92       	push	r10
     5ac:	bf 92       	push	r11
     5ae:	cf 92       	push	r12
     5b0:	df 92       	push	r13
     5b2:	ef 92       	push	r14
     5b4:	ff 92       	push	r15
     5b6:	0f 93       	push	r16
     5b8:	1f 93       	push	r17
     5ba:	cf 93       	push	r28
     5bc:	df 93       	push	r29
     5be:	cd b7       	in	r28, 0x3d	; 61
     5c0:	de b7       	in	r29, 0x3e	; 62
     5c2:	de 01       	movw	r26, r28
     5c4:	53 96       	adiw	r26, 0x13	; 19
     5c6:	ed 91       	ld	r30, X+
     5c8:	fd 91       	ld	r31, X+
     5ca:	8d 01       	movw	r16, r26
     5cc:	5a e0       	ldi	r21, 0x0A	; 10
     5ce:	65 2e       	mov	r6, r21
     5d0:	71 2c       	mov	r7, r1
     5d2:	80 81       	ld	r24, Z
     5d4:	85 32       	cpi	r24, 0x25	; 37
     5d6:	81 f4       	brne	.+32     	; 0x5f8 <cprintf+0x5a>
     5d8:	5f 01       	movw	r10, r30
     5da:	82 e0       	ldi	r24, 0x02	; 2
     5dc:	a8 0e       	add	r10, r24
     5de:	b1 1c       	adc	r11, r1
     5e0:	81 81       	ldd	r24, Z+1	; 0x01
     5e2:	84 36       	cpi	r24, 0x64	; 100
     5e4:	09 f4       	brne	.+2      	; 0x5e8 <cprintf+0x4a>
     5e6:	50 c0       	rjmp	.+160    	; 0x688 <cprintf+0xea>
     5e8:	90 f4       	brcc	.+36     	; 0x60e <cprintf+0x70>
     5ea:	83 36       	cpi	r24, 0x63	; 99
     5ec:	61 f4       	brne	.+24     	; 0x606 <cprintf+0x68>
     5ee:	f8 01       	movw	r30, r16
     5f0:	80 81       	ld	r24, Z
     5f2:	0e 5f       	subi	r16, 0xFE	; 254
     5f4:	1f 4f       	sbci	r17, 0xFF	; 255
     5f6:	07 c0       	rjmp	.+14     	; 0x606 <cprintf+0x68>
     5f8:	88 23       	and	r24, r24
     5fa:	09 f4       	brne	.+2      	; 0x5fe <cprintf+0x60>
     5fc:	5d c0       	rjmp	.+186    	; 0x6b8 <cprintf+0x11a>
     5fe:	5f 01       	movw	r10, r30
     600:	9f ef       	ldi	r25, 0xFF	; 255
     602:	a9 1a       	sub	r10, r25
     604:	b9 0a       	sbc	r11, r25
     606:	0e 94 11 02 	call	0x422	; 0x422 <cputchar>
     60a:	f5 01       	movw	r30, r10
     60c:	e2 cf       	rjmp	.-60     	; 0x5d2 <cprintf+0x34>
     60e:	83 37       	cpi	r24, 0x73	; 115
     610:	71 f1       	breq	.+92     	; 0x66e <cprintf+0xd0>
     612:	30 e1       	ldi	r19, 0x10	; 16
     614:	83 2e       	mov	r8, r19
     616:	91 2c       	mov	r9, r1
     618:	e1 2c       	mov	r14, r1
     61a:	40 e1       	ldi	r20, 0x10	; 16
     61c:	f4 2e       	mov	r15, r20
     61e:	88 37       	cpi	r24, 0x78	; 120
     620:	91 f7       	brne	.-28     	; 0x606 <cprintf+0x68>
     622:	f8 01       	movw	r30, r16
     624:	c0 80       	ld	r12, Z
     626:	d1 80       	ldd	r13, Z+1	; 0x01
     628:	0e 5f       	subi	r16, 0xFE	; 254
     62a:	1f 4f       	sbci	r17, 0xFF	; 255
     62c:	84 36       	cpi	r24, 0x64	; 100
     62e:	59 f4       	brne	.+22     	; 0x646 <cprintf+0xa8>
     630:	d7 fe       	sbrs	r13, 7
     632:	06 c0       	rjmp	.+12     	; 0x640 <cprintf+0xa2>
     634:	d1 94       	neg	r13
     636:	c1 94       	neg	r12
     638:	d1 08       	sbc	r13, r1
     63a:	8d e2       	ldi	r24, 0x2D	; 45
     63c:	0e 94 11 02 	call	0x422	; 0x422 <cputchar>
     640:	ce 14       	cp	r12, r14
     642:	df 04       	cpc	r13, r15
     644:	48 f1       	brcs	.+82     	; 0x698 <cprintf+0xfa>
     646:	c6 01       	movw	r24, r12
     648:	b7 01       	movw	r22, r14
     64a:	0e 94 8c 08 	call	0x1118	; 0x1118 <__udivmodhi4>
     64e:	2c 01       	movw	r4, r24
     650:	68 5f       	subi	r22, 0xF8	; 248
     652:	7d 4f       	sbci	r23, 0xFD	; 253
     654:	fb 01       	movw	r30, r22
     656:	80 81       	ld	r24, Z
     658:	0e 94 11 02 	call	0x422	; 0x422 <cputchar>
     65c:	62 01       	movw	r12, r4
     65e:	c7 01       	movw	r24, r14
     660:	b4 01       	movw	r22, r8
     662:	0e 94 8c 08 	call	0x1118	; 0x1118 <__udivmodhi4>
     666:	7b 01       	movw	r14, r22
     668:	67 2b       	or	r22, r23
     66a:	69 f7       	brne	.-38     	; 0x646 <cprintf+0xa8>
     66c:	ce cf       	rjmp	.-100    	; 0x60a <cprintf+0x6c>
     66e:	f8 01       	movw	r30, r16
     670:	e0 80       	ld	r14, Z
     672:	f1 80       	ldd	r15, Z+1	; 0x01
     674:	0e 5f       	subi	r16, 0xFE	; 254
     676:	1f 4f       	sbci	r17, 0xFF	; 255
     678:	f7 01       	movw	r30, r14
     67a:	81 91       	ld	r24, Z+
     67c:	7f 01       	movw	r14, r30
     67e:	88 23       	and	r24, r24
     680:	21 f2       	breq	.-120    	; 0x60a <cprintf+0x6c>
     682:	0e 94 11 02 	call	0x422	; 0x422 <cputchar>
     686:	f8 cf       	rjmp	.-16     	; 0x678 <cprintf+0xda>
     688:	9a e0       	ldi	r25, 0x0A	; 10
     68a:	89 2e       	mov	r8, r25
     68c:	91 2c       	mov	r9, r1
     68e:	20 e1       	ldi	r18, 0x10	; 16
     690:	e2 2e       	mov	r14, r18
     692:	27 e2       	ldi	r18, 0x27	; 39
     694:	f2 2e       	mov	r15, r18
     696:	c5 cf       	rjmp	.-118    	; 0x622 <cprintf+0x84>
     698:	c7 01       	movw	r24, r14
     69a:	b3 01       	movw	r22, r6
     69c:	0e 94 8c 08 	call	0x1118	; 0x1118 <__udivmodhi4>
     6a0:	7b 01       	movw	r14, r22
     6a2:	62 30       	cpi	r22, 0x02	; 2
     6a4:	71 05       	cpc	r23, r1
     6a6:	60 f6       	brcc	.-104    	; 0x640 <cprintf+0xa2>
     6a8:	c6 01       	movw	r24, r12
     6aa:	0e 94 8c 08 	call	0x1118	; 0x1118 <__udivmodhi4>
     6ae:	fb 01       	movw	r30, r22
     6b0:	e8 5f       	subi	r30, 0xF8	; 248
     6b2:	fd 4f       	sbci	r31, 0xFD	; 253
     6b4:	80 81       	ld	r24, Z
     6b6:	a7 cf       	rjmp	.-178    	; 0x606 <cprintf+0x68>
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	80 e0       	ldi	r24, 0x00	; 0
     6bc:	df 91       	pop	r29
     6be:	cf 91       	pop	r28
     6c0:	1f 91       	pop	r17
     6c2:	0f 91       	pop	r16
     6c4:	ff 90       	pop	r15
     6c6:	ef 90       	pop	r14
     6c8:	df 90       	pop	r13
     6ca:	cf 90       	pop	r12
     6cc:	bf 90       	pop	r11
     6ce:	af 90       	pop	r10
     6d0:	9f 90       	pop	r9
     6d2:	8f 90       	pop	r8
     6d4:	7f 90       	pop	r7
     6d6:	6f 90       	pop	r6
     6d8:	5f 90       	pop	r5
     6da:	4f 90       	pop	r4
     6dc:	08 95       	ret

000006de <OSStartHighRdy>:
     6de:	00 91 28 04 	lds	r16, 0x0428	; 0x800428 <OSRunning>
     6e2:	03 95       	inc	r16
     6e4:	00 93 28 04 	sts	0x0428, r16	; 0x800428 <OSRunning>
     6e8:	e0 91 38 04 	lds	r30, 0x0438	; 0x800438 <OSTCBHighRdy>
     6ec:	f0 91 39 04 	lds	r31, 0x0439	; 0x800439 <OSTCBHighRdy+0x1>
     6f0:	c1 91       	ld	r28, Z+
     6f2:	cd bf       	out	0x3d, r28	; 61
     6f4:	d1 91       	ld	r29, Z+
     6f6:	de bf       	out	0x3e, r29	; 62
     6f8:	0f 91       	pop	r16
     6fa:	0f bf       	out	0x3f, r16	; 63
     6fc:	ff 91       	pop	r31
     6fe:	ef 91       	pop	r30
     700:	df 91       	pop	r29
     702:	cf 91       	pop	r28
     704:	bf 91       	pop	r27
     706:	af 91       	pop	r26
     708:	9f 91       	pop	r25
     70a:	8f 91       	pop	r24
     70c:	7f 91       	pop	r23
     70e:	6f 91       	pop	r22
     710:	5f 91       	pop	r21
     712:	4f 91       	pop	r20
     714:	3f 91       	pop	r19
     716:	2f 91       	pop	r18
     718:	1f 91       	pop	r17
     71a:	0f 91       	pop	r16
     71c:	ff 90       	pop	r15
     71e:	ef 90       	pop	r14
     720:	df 90       	pop	r13
     722:	cf 90       	pop	r12
     724:	bf 90       	pop	r11
     726:	af 90       	pop	r10
     728:	9f 90       	pop	r9
     72a:	8f 90       	pop	r8
     72c:	7f 90       	pop	r7
     72e:	6f 90       	pop	r6
     730:	5f 90       	pop	r5
     732:	4f 90       	pop	r4
     734:	3f 90       	pop	r3
     736:	2f 90       	pop	r2
     738:	1f 90       	pop	r1
     73a:	0f 90       	pop	r0
     73c:	08 95       	ret

0000073e <OSCtxSw>:
     73e:	0f 92       	push	r0
     740:	1f 92       	push	r1
     742:	2f 92       	push	r2
     744:	3f 92       	push	r3
     746:	4f 92       	push	r4
     748:	5f 92       	push	r5
     74a:	6f 92       	push	r6
     74c:	7f 92       	push	r7
     74e:	8f 92       	push	r8
     750:	9f 92       	push	r9
     752:	af 92       	push	r10
     754:	bf 92       	push	r11
     756:	cf 92       	push	r12
     758:	df 92       	push	r13
     75a:	ef 92       	push	r14
     75c:	ff 92       	push	r15
     75e:	0f 93       	push	r16
     760:	1f 93       	push	r17
     762:	2f 93       	push	r18
     764:	3f 93       	push	r19
     766:	4f 93       	push	r20
     768:	5f 93       	push	r21
     76a:	6f 93       	push	r22
     76c:	7f 93       	push	r23
     76e:	8f 93       	push	r24
     770:	9f 93       	push	r25
     772:	af 93       	push	r26
     774:	bf 93       	push	r27
     776:	cf 93       	push	r28
     778:	df 93       	push	r29
     77a:	ef 93       	push	r30
     77c:	ff 93       	push	r31
     77e:	0f b7       	in	r16, 0x3f	; 63
     780:	0f 93       	push	r16
     782:	e0 91 40 04 	lds	r30, 0x0440	; 0x800440 <OSTCBCur>
     786:	f0 91 41 04 	lds	r31, 0x0441	; 0x800441 <OSTCBCur+0x1>
     78a:	cd b7       	in	r28, 0x3d	; 61
     78c:	c1 93       	st	Z+, r28
     78e:	de b7       	in	r29, 0x3e	; 62
     790:	d1 93       	st	Z+, r29
     792:	00 91 2d 04 	lds	r16, 0x042D	; 0x80042d <OSPrioHighRdy>
     796:	00 93 2e 04 	sts	0x042E, r16	; 0x80042e <OSPrioCur>
     79a:	e0 91 38 04 	lds	r30, 0x0438	; 0x800438 <OSTCBHighRdy>
     79e:	f0 91 39 04 	lds	r31, 0x0439	; 0x800439 <OSTCBHighRdy+0x1>
     7a2:	e0 93 40 04 	sts	0x0440, r30	; 0x800440 <OSTCBCur>
     7a6:	f0 93 41 04 	sts	0x0441, r31	; 0x800441 <OSTCBCur+0x1>
     7aa:	c1 91       	ld	r28, Z+
     7ac:	cd bf       	out	0x3d, r28	; 61
     7ae:	d1 91       	ld	r29, Z+
     7b0:	de bf       	out	0x3e, r29	; 62
     7b2:	0f 91       	pop	r16
     7b4:	0f bf       	out	0x3f, r16	; 63
     7b6:	ff 91       	pop	r31
     7b8:	ef 91       	pop	r30
     7ba:	df 91       	pop	r29
     7bc:	cf 91       	pop	r28
     7be:	bf 91       	pop	r27
     7c0:	af 91       	pop	r26
     7c2:	9f 91       	pop	r25
     7c4:	8f 91       	pop	r24
     7c6:	7f 91       	pop	r23
     7c8:	6f 91       	pop	r22
     7ca:	5f 91       	pop	r21
     7cc:	4f 91       	pop	r20
     7ce:	3f 91       	pop	r19
     7d0:	2f 91       	pop	r18
     7d2:	1f 91       	pop	r17
     7d4:	0f 91       	pop	r16
     7d6:	ff 90       	pop	r15
     7d8:	ef 90       	pop	r14
     7da:	df 90       	pop	r13
     7dc:	cf 90       	pop	r12
     7de:	bf 90       	pop	r11
     7e0:	af 90       	pop	r10
     7e2:	9f 90       	pop	r9
     7e4:	8f 90       	pop	r8
     7e6:	7f 90       	pop	r7
     7e8:	6f 90       	pop	r6
     7ea:	5f 90       	pop	r5
     7ec:	4f 90       	pop	r4
     7ee:	3f 90       	pop	r3
     7f0:	2f 90       	pop	r2
     7f2:	1f 90       	pop	r1
     7f4:	0f 90       	pop	r0
     7f6:	08 95       	ret

000007f8 <OSIntCtxSw>:
     7f8:	00 91 2d 04 	lds	r16, 0x042D	; 0x80042d <OSPrioHighRdy>
     7fc:	00 93 2e 04 	sts	0x042E, r16	; 0x80042e <OSPrioCur>
     800:	e0 91 38 04 	lds	r30, 0x0438	; 0x800438 <OSTCBHighRdy>
     804:	f0 91 39 04 	lds	r31, 0x0439	; 0x800439 <OSTCBHighRdy+0x1>
     808:	e0 93 40 04 	sts	0x0440, r30	; 0x800440 <OSTCBCur>
     80c:	f0 93 41 04 	sts	0x0441, r31	; 0x800441 <OSTCBCur+0x1>
     810:	c1 91       	ld	r28, Z+
     812:	cd bf       	out	0x3d, r28	; 61
     814:	d1 91       	ld	r29, Z+
     816:	de bf       	out	0x3e, r29	; 62
     818:	0f 91       	pop	r16
     81a:	0f bf       	out	0x3f, r16	; 63
     81c:	ff 91       	pop	r31
     81e:	ef 91       	pop	r30
     820:	df 91       	pop	r29
     822:	cf 91       	pop	r28
     824:	bf 91       	pop	r27
     826:	af 91       	pop	r26
     828:	9f 91       	pop	r25
     82a:	8f 91       	pop	r24
     82c:	7f 91       	pop	r23
     82e:	6f 91       	pop	r22
     830:	5f 91       	pop	r21
     832:	4f 91       	pop	r20
     834:	3f 91       	pop	r19
     836:	2f 91       	pop	r18
     838:	1f 91       	pop	r17
     83a:	0f 91       	pop	r16
     83c:	ff 90       	pop	r15
     83e:	ef 90       	pop	r14
     840:	df 90       	pop	r13
     842:	cf 90       	pop	r12
     844:	bf 90       	pop	r11
     846:	af 90       	pop	r10
     848:	9f 90       	pop	r9
     84a:	8f 90       	pop	r8
     84c:	7f 90       	pop	r7
     84e:	6f 90       	pop	r6
     850:	5f 90       	pop	r5
     852:	4f 90       	pop	r4
     854:	3f 90       	pop	r3
     856:	2f 90       	pop	r2
     858:	1f 90       	pop	r1
     85a:	0f 90       	pop	r0
     85c:	08 95       	ret

0000085e <OSTickISR>:
     85e:	0f 92       	push	r0
     860:	1f 92       	push	r1
     862:	2f 92       	push	r2
     864:	3f 92       	push	r3
     866:	4f 92       	push	r4
     868:	5f 92       	push	r5
     86a:	6f 92       	push	r6
     86c:	7f 92       	push	r7
     86e:	8f 92       	push	r8
     870:	9f 92       	push	r9
     872:	af 92       	push	r10
     874:	bf 92       	push	r11
     876:	cf 92       	push	r12
     878:	df 92       	push	r13
     87a:	ef 92       	push	r14
     87c:	ff 92       	push	r15
     87e:	0f 93       	push	r16
     880:	1f 93       	push	r17
     882:	2f 93       	push	r18
     884:	3f 93       	push	r19
     886:	4f 93       	push	r20
     888:	5f 93       	push	r21
     88a:	6f 93       	push	r22
     88c:	7f 93       	push	r23
     88e:	8f 93       	push	r24
     890:	9f 93       	push	r25
     892:	af 93       	push	r26
     894:	bf 93       	push	r27
     896:	cf 93       	push	r28
     898:	df 93       	push	r29
     89a:	ef 93       	push	r30
     89c:	ff 93       	push	r31
     89e:	0f b7       	in	r16, 0x3f	; 63
     8a0:	00 68       	ori	r16, 0x80	; 128
     8a2:	0f 93       	push	r16
     8a4:	00 91 3f 04 	lds	r16, 0x043F	; 0x80043f <OSIntNesting>
     8a8:	03 95       	inc	r16
     8aa:	00 93 3f 04 	sts	0x043F, r16	; 0x80043f <OSIntNesting>
     8ae:	01 30       	cpi	r16, 0x01	; 1
     8b0:	41 f4       	brne	.+16     	; 0x8c2 <_not_first_int>
     8b2:	cd b7       	in	r28, 0x3d	; 61
     8b4:	de b7       	in	r29, 0x3e	; 62
     8b6:	e0 91 40 04 	lds	r30, 0x0440	; 0x800440 <OSTCBCur>
     8ba:	f0 91 41 04 	lds	r31, 0x0441	; 0x800441 <OSTCBCur+0x1>
     8be:	c1 93       	st	Z+, r28
     8c0:	d1 93       	st	Z+, r29

000008c2 <_not_first_int>:
     8c2:	04 e6       	ldi	r16, 0x64	; 100
     8c4:	06 bd       	out	0x26, r16	; 38
     8c6:	f0 e0       	ldi	r31, 0x00	; 0
     8c8:	1f 2e       	mov	r1, r31
     8ca:	78 94       	sei
     8cc:	0e 94 92 05 	call	0xb24	; 0xb24 <OSTimeTick>
     8d0:	00 00       	nop
     8d2:	0e 94 05 05 	call	0xa0a	; 0xa0a <OSIntExit>
     8d6:	0f 91       	pop	r16
     8d8:	0f bf       	out	0x3f, r16	; 63
     8da:	ff 91       	pop	r31
     8dc:	ef 91       	pop	r30
     8de:	df 91       	pop	r29
     8e0:	cf 91       	pop	r28
     8e2:	bf 91       	pop	r27
     8e4:	af 91       	pop	r26
     8e6:	9f 91       	pop	r25
     8e8:	8f 91       	pop	r24
     8ea:	7f 91       	pop	r23
     8ec:	6f 91       	pop	r22
     8ee:	5f 91       	pop	r21
     8f0:	4f 91       	pop	r20
     8f2:	3f 91       	pop	r19
     8f4:	2f 91       	pop	r18
     8f6:	1f 91       	pop	r17
     8f8:	0f 91       	pop	r16
     8fa:	ff 90       	pop	r15
     8fc:	ef 90       	pop	r14
     8fe:	df 90       	pop	r13
     900:	cf 90       	pop	r12
     902:	bf 90       	pop	r11
     904:	af 90       	pop	r10
     906:	9f 90       	pop	r9
     908:	8f 90       	pop	r8
     90a:	7f 90       	pop	r7
     90c:	6f 90       	pop	r6
     90e:	5f 90       	pop	r5
     910:	4f 90       	pop	r4
     912:	3f 90       	pop	r3
     914:	2f 90       	pop	r2
     916:	1f 90       	pop	r1
     918:	0f 90       	pop	r0
     91a:	08 95       	ret

0000091c <OSTaskStkInit>:
     91c:	fa 01       	movw	r30, r20
     91e:	80 83       	st	Z, r24
     920:	31 97       	sbiw	r30, 0x01	; 1
     922:	90 83       	st	Z, r25
     924:	31 97       	sbiw	r30, 0x01	; 1
     926:	10 82       	st	Z, r1
     928:	31 97       	sbiw	r30, 0x01	; 1
     92a:	10 82       	st	Z, r1
     92c:	31 97       	sbiw	r30, 0x01	; 1
     92e:	10 82       	st	Z, r1
     930:	31 97       	sbiw	r30, 0x01	; 1
     932:	10 82       	st	Z, r1
     934:	31 97       	sbiw	r30, 0x01	; 1
     936:	10 82       	st	Z, r1
     938:	31 97       	sbiw	r30, 0x01	; 1
     93a:	10 82       	st	Z, r1
     93c:	31 97       	sbiw	r30, 0x01	; 1
     93e:	10 82       	st	Z, r1
     940:	31 97       	sbiw	r30, 0x01	; 1
     942:	10 82       	st	Z, r1
     944:	31 97       	sbiw	r30, 0x01	; 1
     946:	10 82       	st	Z, r1
     948:	31 97       	sbiw	r30, 0x01	; 1
     94a:	10 82       	st	Z, r1
     94c:	31 97       	sbiw	r30, 0x01	; 1
     94e:	10 82       	st	Z, r1
     950:	31 97       	sbiw	r30, 0x01	; 1
     952:	10 82       	st	Z, r1
     954:	31 97       	sbiw	r30, 0x01	; 1
     956:	10 82       	st	Z, r1
     958:	31 97       	sbiw	r30, 0x01	; 1
     95a:	10 82       	st	Z, r1
     95c:	31 97       	sbiw	r30, 0x01	; 1
     95e:	10 82       	st	Z, r1
     960:	31 97       	sbiw	r30, 0x01	; 1
     962:	10 82       	st	Z, r1
     964:	31 97       	sbiw	r30, 0x01	; 1
     966:	10 82       	st	Z, r1
     968:	31 97       	sbiw	r30, 0x01	; 1
     96a:	10 82       	st	Z, r1
     96c:	31 97       	sbiw	r30, 0x01	; 1
     96e:	10 82       	st	Z, r1
     970:	31 97       	sbiw	r30, 0x01	; 1
     972:	10 82       	st	Z, r1
     974:	31 97       	sbiw	r30, 0x01	; 1
     976:	10 82       	st	Z, r1
     978:	31 97       	sbiw	r30, 0x01	; 1
     97a:	10 82       	st	Z, r1
     97c:	31 97       	sbiw	r30, 0x01	; 1
     97e:	10 82       	st	Z, r1
     980:	31 97       	sbiw	r30, 0x01	; 1
     982:	10 82       	st	Z, r1
     984:	31 97       	sbiw	r30, 0x01	; 1
     986:	60 83       	st	Z, r22
     988:	31 97       	sbiw	r30, 0x01	; 1
     98a:	70 83       	st	Z, r23
     98c:	31 97       	sbiw	r30, 0x01	; 1
     98e:	10 82       	st	Z, r1
     990:	31 97       	sbiw	r30, 0x01	; 1
     992:	10 82       	st	Z, r1
     994:	31 97       	sbiw	r30, 0x01	; 1
     996:	10 82       	st	Z, r1
     998:	31 97       	sbiw	r30, 0x01	; 1
     99a:	10 82       	st	Z, r1
     99c:	31 97       	sbiw	r30, 0x01	; 1
     99e:	10 82       	st	Z, r1
     9a0:	31 97       	sbiw	r30, 0x01	; 1
     9a2:	10 82       	st	Z, r1
     9a4:	31 97       	sbiw	r30, 0x01	; 1
     9a6:	80 e8       	ldi	r24, 0x80	; 128
     9a8:	80 83       	st	Z, r24
     9aa:	ca 01       	movw	r24, r20
     9ac:	83 97       	sbiw	r24, 0x23	; 35
     9ae:	08 95       	ret

000009b0 <OSTaskCreateHook>:
     9b0:	08 95       	ret

000009b2 <OSTaskDelHook>:
     9b2:	08 95       	ret

000009b4 <OSTaskSwHook>:
     9b4:	08 95       	ret

000009b6 <OSTaskStatHook>:
     9b6:	08 95       	ret

000009b8 <OSTimeTickHook>:
     9b8:	08 95       	ret

000009ba <OSInitHookBegin>:
     9ba:	08 95       	ret

000009bc <OSInitHookEnd>:
     9bc:	08 95       	ret

000009be <OSTaskIdleHook>:
     9be:	08 95       	ret

000009c0 <OSTCBInitHook>:
     9c0:	08 95       	ret

000009c2 <OS_TaskIdle>:
     9c2:	f8 94       	cli
     9c4:	80 91 29 04 	lds	r24, 0x0429	; 0x800429 <OSIdleCtr>
     9c8:	90 91 2a 04 	lds	r25, 0x042A	; 0x80042a <OSIdleCtr+0x1>
     9cc:	a0 91 2b 04 	lds	r26, 0x042B	; 0x80042b <OSIdleCtr+0x2>
     9d0:	b0 91 2c 04 	lds	r27, 0x042C	; 0x80042c <OSIdleCtr+0x3>
     9d4:	01 96       	adiw	r24, 0x01	; 1
     9d6:	a1 1d       	adc	r26, r1
     9d8:	b1 1d       	adc	r27, r1
     9da:	80 93 29 04 	sts	0x0429, r24	; 0x800429 <OSIdleCtr>
     9de:	90 93 2a 04 	sts	0x042A, r25	; 0x80042a <OSIdleCtr+0x1>
     9e2:	a0 93 2b 04 	sts	0x042B, r26	; 0x80042b <OSIdleCtr+0x2>
     9e6:	b0 93 2c 04 	sts	0x042C, r27	; 0x80042c <OSIdleCtr+0x3>
     9ea:	78 94       	sei
     9ec:	0e 94 df 04 	call	0x9be	; 0x9be <OSTaskIdleHook>
     9f0:	e8 cf       	rjmp	.-48     	; 0x9c2 <OS_TaskIdle>

000009f2 <OSIntEnter>:
     9f2:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <OSRunning>
     9f6:	81 30       	cpi	r24, 0x01	; 1
     9f8:	39 f4       	brne	.+14     	; 0xa08 <OSIntEnter+0x16>
     9fa:	80 91 3f 04 	lds	r24, 0x043F	; 0x80043f <OSIntNesting>
     9fe:	8f 3f       	cpi	r24, 0xFF	; 255
     a00:	19 f0       	breq	.+6      	; 0xa08 <OSIntEnter+0x16>
     a02:	8f 5f       	subi	r24, 0xFF	; 255
     a04:	80 93 3f 04 	sts	0x043F, r24	; 0x80043f <OSIntNesting>
     a08:	08 95       	ret

00000a0a <OSIntExit>:
     a0a:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <OSRunning>
     a0e:	81 30       	cpi	r24, 0x01	; 1
     a10:	09 f0       	breq	.+2      	; 0xa14 <OSIntExit+0xa>
     a12:	4c c0       	rjmp	.+152    	; 0xaac <OSIntExit+0xa2>
     a14:	f8 94       	cli
     a16:	80 91 3f 04 	lds	r24, 0x043F	; 0x80043f <OSIntNesting>
     a1a:	88 23       	and	r24, r24
     a1c:	19 f0       	breq	.+6      	; 0xa24 <OSIntExit+0x1a>
     a1e:	81 50       	subi	r24, 0x01	; 1
     a20:	80 93 3f 04 	sts	0x043F, r24	; 0x80043f <OSIntNesting>
     a24:	80 91 3f 04 	lds	r24, 0x043F	; 0x80043f <OSIntNesting>
     a28:	81 11       	cpse	r24, r1
     a2a:	3f c0       	rjmp	.+126    	; 0xaaa <OSIntExit+0xa0>
     a2c:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <OSLockNesting>
     a30:	81 11       	cpse	r24, r1
     a32:	3b c0       	rjmp	.+118    	; 0xaaa <OSIntExit+0xa0>
     a34:	e0 91 3a 04 	lds	r30, 0x043A	; 0x80043a <OSRdyGrp>
     a38:	f0 e0       	ldi	r31, 0x00	; 0
     a3a:	e0 50       	subi	r30, 0x00	; 0
     a3c:	ff 4f       	sbci	r31, 0xFF	; 255
     a3e:	e0 81       	ld	r30, Z
     a40:	e0 93 3e 04 	sts	0x043E, r30	; 0x80043e <OSIntExitY>
     a44:	ae 2f       	mov	r26, r30
     a46:	b0 e0       	ldi	r27, 0x00	; 0
     a48:	a5 5c       	subi	r26, 0xC5	; 197
     a4a:	bb 4f       	sbci	r27, 0xFB	; 251
     a4c:	ac 91       	ld	r26, X
     a4e:	b0 e0       	ldi	r27, 0x00	; 0
     a50:	a0 50       	subi	r26, 0x00	; 0
     a52:	bf 4f       	sbci	r27, 0xFF	; 255
     a54:	ee 0f       	add	r30, r30
     a56:	ee 0f       	add	r30, r30
     a58:	ee 0f       	add	r30, r30
     a5a:	8c 91       	ld	r24, X
     a5c:	e8 0f       	add	r30, r24
     a5e:	e0 93 2d 04 	sts	0x042D, r30	; 0x80042d <OSPrioHighRdy>
     a62:	80 91 2e 04 	lds	r24, 0x042E	; 0x80042e <OSPrioCur>
     a66:	e8 17       	cp	r30, r24
     a68:	01 f1       	breq	.+64     	; 0xaaa <OSIntExit+0xa0>
     a6a:	f0 e0       	ldi	r31, 0x00	; 0
     a6c:	ee 0f       	add	r30, r30
     a6e:	ff 1f       	adc	r31, r31
     a70:	ef 57       	subi	r30, 0x7F	; 127
     a72:	fa 4f       	sbci	r31, 0xFA	; 250
     a74:	80 81       	ld	r24, Z
     a76:	91 81       	ldd	r25, Z+1	; 0x01
     a78:	90 93 39 04 	sts	0x0439, r25	; 0x800439 <OSTCBHighRdy+0x1>
     a7c:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <OSTCBHighRdy>
     a80:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <OSCtxSwCtr>
     a84:	90 91 32 04 	lds	r25, 0x0432	; 0x800432 <OSCtxSwCtr+0x1>
     a88:	a0 91 33 04 	lds	r26, 0x0433	; 0x800433 <OSCtxSwCtr+0x2>
     a8c:	b0 91 34 04 	lds	r27, 0x0434	; 0x800434 <OSCtxSwCtr+0x3>
     a90:	01 96       	adiw	r24, 0x01	; 1
     a92:	a1 1d       	adc	r26, r1
     a94:	b1 1d       	adc	r27, r1
     a96:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <OSCtxSwCtr>
     a9a:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <OSCtxSwCtr+0x1>
     a9e:	a0 93 33 04 	sts	0x0433, r26	; 0x800433 <OSCtxSwCtr+0x2>
     aa2:	b0 93 34 04 	sts	0x0434, r27	; 0x800434 <OSCtxSwCtr+0x3>
     aa6:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <OSIntCtxSw>
     aaa:	78 94       	sei
     aac:	08 95       	ret

00000aae <OSSchedLock>:
     aae:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <OSRunning>
     ab2:	81 30       	cpi	r24, 0x01	; 1
     ab4:	49 f4       	brne	.+18     	; 0xac8 <OSSchedLock+0x1a>
     ab6:	f8 94       	cli
     ab8:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <OSLockNesting>
     abc:	8f 3f       	cpi	r24, 0xFF	; 255
     abe:	19 f0       	breq	.+6      	; 0xac6 <OSSchedLock+0x18>
     ac0:	8f 5f       	subi	r24, 0xFF	; 255
     ac2:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <OSLockNesting>
     ac6:	78 94       	sei
     ac8:	08 95       	ret

00000aca <OSStart>:
     aca:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <OSRunning>
     ace:	81 11       	cpse	r24, r1
     ad0:	28 c0       	rjmp	.+80     	; 0xb22 <OSStart+0x58>
     ad2:	e0 91 3a 04 	lds	r30, 0x043A	; 0x80043a <OSRdyGrp>
     ad6:	f0 e0       	ldi	r31, 0x00	; 0
     ad8:	e0 50       	subi	r30, 0x00	; 0
     ada:	ff 4f       	sbci	r31, 0xFF	; 255
     adc:	e0 81       	ld	r30, Z
     ade:	ae 2f       	mov	r26, r30
     ae0:	b0 e0       	ldi	r27, 0x00	; 0
     ae2:	a5 5c       	subi	r26, 0xC5	; 197
     ae4:	bb 4f       	sbci	r27, 0xFB	; 251
     ae6:	ac 91       	ld	r26, X
     ae8:	b0 e0       	ldi	r27, 0x00	; 0
     aea:	a0 50       	subi	r26, 0x00	; 0
     aec:	bf 4f       	sbci	r27, 0xFF	; 255
     aee:	ee 0f       	add	r30, r30
     af0:	ee 0f       	add	r30, r30
     af2:	ee 0f       	add	r30, r30
     af4:	8c 91       	ld	r24, X
     af6:	e8 0f       	add	r30, r24
     af8:	e0 93 2d 04 	sts	0x042D, r30	; 0x80042d <OSPrioHighRdy>
     afc:	e0 93 2e 04 	sts	0x042E, r30	; 0x80042e <OSPrioCur>
     b00:	f0 e0       	ldi	r31, 0x00	; 0
     b02:	ee 0f       	add	r30, r30
     b04:	ff 1f       	adc	r31, r31
     b06:	ef 57       	subi	r30, 0x7F	; 127
     b08:	fa 4f       	sbci	r31, 0xFA	; 250
     b0a:	80 81       	ld	r24, Z
     b0c:	91 81       	ldd	r25, Z+1	; 0x01
     b0e:	90 93 39 04 	sts	0x0439, r25	; 0x800439 <OSTCBHighRdy+0x1>
     b12:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <OSTCBHighRdy>
     b16:	90 93 41 04 	sts	0x0441, r25	; 0x800441 <OSTCBCur+0x1>
     b1a:	80 93 40 04 	sts	0x0440, r24	; 0x800440 <OSTCBCur>
     b1e:	0c 94 6f 03 	jmp	0x6de	; 0x6de <OSStartHighRdy>
     b22:	08 95       	ret

00000b24 <OSTimeTick>:
     b24:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <OSTimeTickHook>
     b28:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <OSRunning>
     b2c:	e0 91 2f 04 	lds	r30, 0x042F	; 0x80042f <OSTCBList>
     b30:	f0 91 30 04 	lds	r31, 0x0430	; 0x800430 <OSTCBList+0x1>
     b34:	21 e0       	ldi	r18, 0x01	; 1
     b36:	30 e0       	ldi	r19, 0x00	; 0
     b38:	81 30       	cpi	r24, 0x01	; 1
     b3a:	01 f1       	breq	.+64     	; 0xb7c <OSTimeTick+0x58>
     b3c:	08 95       	ret
     b3e:	f8 94       	cli
     b40:	86 81       	ldd	r24, Z+6	; 0x06
     b42:	97 81       	ldd	r25, Z+7	; 0x07
     b44:	00 97       	sbiw	r24, 0x00	; 0
     b46:	b1 f0       	breq	.+44     	; 0xb74 <OSTimeTick+0x50>
     b48:	01 97       	sbiw	r24, 0x01	; 1
     b4a:	97 83       	std	Z+7, r25	; 0x07
     b4c:	86 83       	std	Z+6, r24	; 0x06
     b4e:	89 2b       	or	r24, r25
     b50:	89 f4       	brne	.+34     	; 0xb74 <OSTimeTick+0x50>
     b52:	80 85       	ldd	r24, Z+8	; 0x08
     b54:	83 fd       	sbrc	r24, 3
     b56:	16 c0       	rjmp	.+44     	; 0xb84 <OSTimeTick+0x60>
     b58:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <OSRdyGrp>
     b5c:	95 85       	ldd	r25, Z+13	; 0x0d
     b5e:	89 2b       	or	r24, r25
     b60:	80 93 3a 04 	sts	0x043A, r24	; 0x80043a <OSRdyGrp>
     b64:	a3 85       	ldd	r26, Z+11	; 0x0b
     b66:	b0 e0       	ldi	r27, 0x00	; 0
     b68:	a5 5c       	subi	r26, 0xC5	; 197
     b6a:	bb 4f       	sbci	r27, 0xFB	; 251
     b6c:	8c 91       	ld	r24, X
     b6e:	94 85       	ldd	r25, Z+12	; 0x0c
     b70:	89 2b       	or	r24, r25
     b72:	8c 93       	st	X, r24
     b74:	02 80       	ldd	r0, Z+2	; 0x02
     b76:	f3 81       	ldd	r31, Z+3	; 0x03
     b78:	e0 2d       	mov	r30, r0
     b7a:	78 94       	sei
     b7c:	81 85       	ldd	r24, Z+9	; 0x09
     b7e:	80 31       	cpi	r24, 0x10	; 16
     b80:	f1 f6       	brne	.-68     	; 0xb3e <OSTimeTick+0x1a>
     b82:	dc cf       	rjmp	.-72     	; 0xb3c <OSTimeTick+0x18>
     b84:	37 83       	std	Z+7, r19	; 0x07
     b86:	26 83       	std	Z+6, r18	; 0x06
     b88:	f5 cf       	rjmp	.-22     	; 0xb74 <OSTimeTick+0x50>

00000b8a <OSVersion>:
     b8a:	8c ef       	ldi	r24, 0xFC	; 252
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	08 95       	ret

00000b90 <OS_Dummy>:
     b90:	08 95       	ret

00000b92 <OS_Sched>:
     b92:	f8 94       	cli
     b94:	80 91 3f 04 	lds	r24, 0x043F	; 0x80043f <OSIntNesting>
     b98:	81 11       	cpse	r24, r1
     b9a:	3d c0       	rjmp	.+122    	; 0xc16 <OS_Sched+0x84>
     b9c:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <OSLockNesting>
     ba0:	81 11       	cpse	r24, r1
     ba2:	39 c0       	rjmp	.+114    	; 0xc16 <OS_Sched+0x84>
     ba4:	e0 91 3a 04 	lds	r30, 0x043A	; 0x80043a <OSRdyGrp>
     ba8:	f0 e0       	ldi	r31, 0x00	; 0
     baa:	e0 50       	subi	r30, 0x00	; 0
     bac:	ff 4f       	sbci	r31, 0xFF	; 255
     bae:	e0 81       	ld	r30, Z
     bb0:	ae 2f       	mov	r26, r30
     bb2:	b0 e0       	ldi	r27, 0x00	; 0
     bb4:	a5 5c       	subi	r26, 0xC5	; 197
     bb6:	bb 4f       	sbci	r27, 0xFB	; 251
     bb8:	ac 91       	ld	r26, X
     bba:	b0 e0       	ldi	r27, 0x00	; 0
     bbc:	a0 50       	subi	r26, 0x00	; 0
     bbe:	bf 4f       	sbci	r27, 0xFF	; 255
     bc0:	ee 0f       	add	r30, r30
     bc2:	ee 0f       	add	r30, r30
     bc4:	ee 0f       	add	r30, r30
     bc6:	8c 91       	ld	r24, X
     bc8:	e8 0f       	add	r30, r24
     bca:	e0 93 2d 04 	sts	0x042D, r30	; 0x80042d <OSPrioHighRdy>
     bce:	80 91 2e 04 	lds	r24, 0x042E	; 0x80042e <OSPrioCur>
     bd2:	e8 17       	cp	r30, r24
     bd4:	01 f1       	breq	.+64     	; 0xc16 <OS_Sched+0x84>
     bd6:	f0 e0       	ldi	r31, 0x00	; 0
     bd8:	ee 0f       	add	r30, r30
     bda:	ff 1f       	adc	r31, r31
     bdc:	ef 57       	subi	r30, 0x7F	; 127
     bde:	fa 4f       	sbci	r31, 0xFA	; 250
     be0:	80 81       	ld	r24, Z
     be2:	91 81       	ldd	r25, Z+1	; 0x01
     be4:	90 93 39 04 	sts	0x0439, r25	; 0x800439 <OSTCBHighRdy+0x1>
     be8:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <OSTCBHighRdy>
     bec:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <OSCtxSwCtr>
     bf0:	90 91 32 04 	lds	r25, 0x0432	; 0x800432 <OSCtxSwCtr+0x1>
     bf4:	a0 91 33 04 	lds	r26, 0x0433	; 0x800433 <OSCtxSwCtr+0x2>
     bf8:	b0 91 34 04 	lds	r27, 0x0434	; 0x800434 <OSCtxSwCtr+0x3>
     bfc:	01 96       	adiw	r24, 0x01	; 1
     bfe:	a1 1d       	adc	r26, r1
     c00:	b1 1d       	adc	r27, r1
     c02:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <OSCtxSwCtr>
     c06:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <OSCtxSwCtr+0x1>
     c0a:	a0 93 33 04 	sts	0x0433, r26	; 0x800433 <OSCtxSwCtr+0x2>
     c0e:	b0 93 34 04 	sts	0x0434, r27	; 0x800434 <OSCtxSwCtr+0x3>
     c12:	0e 94 9f 03 	call	0x73e	; 0x73e <OSCtxSw>
     c16:	78 94       	sei
     c18:	08 95       	ret

00000c1a <OSSchedUnlock>:
     c1a:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <OSRunning>
     c1e:	81 30       	cpi	r24, 0x01	; 1
     c20:	91 f4       	brne	.+36     	; 0xc46 <OSSchedUnlock+0x2c>
     c22:	f8 94       	cli
     c24:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <OSLockNesting>
     c28:	88 23       	and	r24, r24
     c2a:	61 f0       	breq	.+24     	; 0xc44 <OSSchedUnlock+0x2a>
     c2c:	81 50       	subi	r24, 0x01	; 1
     c2e:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <OSLockNesting>
     c32:	81 11       	cpse	r24, r1
     c34:	07 c0       	rjmp	.+14     	; 0xc44 <OSSchedUnlock+0x2a>
     c36:	80 91 3f 04 	lds	r24, 0x043F	; 0x80043f <OSIntNesting>
     c3a:	81 11       	cpse	r24, r1
     c3c:	03 c0       	rjmp	.+6      	; 0xc44 <OSSchedUnlock+0x2a>
     c3e:	78 94       	sei
     c40:	0c 94 c9 05 	jmp	0xb92	; 0xb92 <OS_Sched>
     c44:	78 94       	sei
     c46:	08 95       	ret

00000c48 <OSTimeDly.part.0>:
     c48:	ac 01       	movw	r20, r24
     c4a:	f8 94       	cli
     c4c:	a0 91 40 04 	lds	r26, 0x0440	; 0x800440 <OSTCBCur>
     c50:	b0 91 41 04 	lds	r27, 0x0441	; 0x800441 <OSTCBCur+0x1>
     c54:	1b 96       	adiw	r26, 0x0b	; 11
     c56:	ec 91       	ld	r30, X
     c58:	1b 97       	sbiw	r26, 0x0b	; 11
     c5a:	f0 e0       	ldi	r31, 0x00	; 0
     c5c:	1c 96       	adiw	r26, 0x0c	; 12
     c5e:	9c 91       	ld	r25, X
     c60:	1c 97       	sbiw	r26, 0x0c	; 12
     c62:	90 95       	com	r25
     c64:	e5 5c       	subi	r30, 0xC5	; 197
     c66:	fb 4f       	sbci	r31, 0xFB	; 251
     c68:	80 81       	ld	r24, Z
     c6a:	98 23       	and	r25, r24
     c6c:	90 83       	st	Z, r25
     c6e:	91 11       	cpse	r25, r1
     c70:	0a c0       	rjmp	.+20     	; 0xc86 <OSTimeDly.part.0+0x3e>
     c72:	1d 96       	adiw	r26, 0x0d	; 13
     c74:	9c 91       	ld	r25, X
     c76:	1d 97       	sbiw	r26, 0x0d	; 13
     c78:	29 2f       	mov	r18, r25
     c7a:	20 95       	com	r18
     c7c:	90 91 3a 04 	lds	r25, 0x043A	; 0x80043a <OSRdyGrp>
     c80:	92 23       	and	r25, r18
     c82:	90 93 3a 04 	sts	0x043A, r25	; 0x80043a <OSRdyGrp>
     c86:	17 96       	adiw	r26, 0x07	; 7
     c88:	5c 93       	st	X, r21
     c8a:	4e 93       	st	-X, r20
     c8c:	16 97       	sbiw	r26, 0x06	; 6
     c8e:	78 94       	sei
     c90:	0c 94 c9 05 	jmp	0xb92	; 0xb92 <OS_Sched>

00000c94 <OS_TCBInit>:
     c94:	1f 93       	push	r17
     c96:	cf 93       	push	r28
     c98:	df 93       	push	r29
     c9a:	f8 94       	cli
     c9c:	c0 91 35 04 	lds	r28, 0x0435	; 0x800435 <OSTCBFreeList>
     ca0:	d0 91 36 04 	lds	r29, 0x0436	; 0x800436 <OSTCBFreeList+0x1>
     ca4:	20 97       	sbiw	r28, 0x00	; 0
     ca6:	09 f4       	brne	.+2      	; 0xcaa <OS_TCBInit+0x16>
     ca8:	54 c0       	rjmp	.+168    	; 0xd52 <OS_TCBInit+0xbe>
     caa:	18 2f       	mov	r17, r24
     cac:	8a 81       	ldd	r24, Y+2	; 0x02
     cae:	9b 81       	ldd	r25, Y+3	; 0x03
     cb0:	90 93 36 04 	sts	0x0436, r25	; 0x800436 <OSTCBFreeList+0x1>
     cb4:	80 93 35 04 	sts	0x0435, r24	; 0x800435 <OSTCBFreeList>
     cb8:	78 94       	sei
     cba:	79 83       	std	Y+1, r23	; 0x01
     cbc:	68 83       	st	Y, r22
     cbe:	19 87       	std	Y+9, r17	; 0x09
     cc0:	18 86       	std	Y+8, r1	; 0x08
     cc2:	1f 82       	std	Y+7, r1	; 0x07
     cc4:	1e 82       	std	Y+6, r1	; 0x06
     cc6:	1e 86       	std	Y+14, r1	; 0x0e
     cc8:	e1 2f       	mov	r30, r17
     cca:	e6 95       	lsr	r30
     ccc:	e6 95       	lsr	r30
     cce:	e6 95       	lsr	r30
     cd0:	eb 87       	std	Y+11, r30	; 0x0b
     cd2:	f0 e0       	ldi	r31, 0x00	; 0
     cd4:	e0 50       	subi	r30, 0x00	; 0
     cd6:	fe 4f       	sbci	r31, 0xFE	; 254
     cd8:	80 81       	ld	r24, Z
     cda:	8d 87       	std	Y+13, r24	; 0x0d
     cdc:	e1 2f       	mov	r30, r17
     cde:	e7 70       	andi	r30, 0x07	; 7
     ce0:	ea 87       	std	Y+10, r30	; 0x0a
     ce2:	f0 e0       	ldi	r31, 0x00	; 0
     ce4:	e0 50       	subi	r30, 0x00	; 0
     ce6:	fe 4f       	sbci	r31, 0xFE	; 254
     ce8:	80 81       	ld	r24, Z
     cea:	8c 87       	std	Y+12, r24	; 0x0c
     cec:	ce 01       	movw	r24, r28
     cee:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <OSTCBInitHook>
     cf2:	ce 01       	movw	r24, r28
     cf4:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <OSTaskCreateHook>
     cf8:	f8 94       	cli
     cfa:	e1 2f       	mov	r30, r17
     cfc:	f0 e0       	ldi	r31, 0x00	; 0
     cfe:	ee 0f       	add	r30, r30
     d00:	ff 1f       	adc	r31, r31
     d02:	ef 57       	subi	r30, 0x7F	; 127
     d04:	fa 4f       	sbci	r31, 0xFA	; 250
     d06:	d1 83       	std	Z+1, r29	; 0x01
     d08:	c0 83       	st	Z, r28
     d0a:	e0 91 2f 04 	lds	r30, 0x042F	; 0x80042f <OSTCBList>
     d0e:	f0 91 30 04 	lds	r31, 0x0430	; 0x800430 <OSTCBList+0x1>
     d12:	fb 83       	std	Y+3, r31	; 0x03
     d14:	ea 83       	std	Y+2, r30	; 0x02
     d16:	1d 82       	std	Y+5, r1	; 0x05
     d18:	1c 82       	std	Y+4, r1	; 0x04
     d1a:	30 97       	sbiw	r30, 0x00	; 0
     d1c:	11 f0       	breq	.+4      	; 0xd22 <OS_TCBInit+0x8e>
     d1e:	d5 83       	std	Z+5, r29	; 0x05
     d20:	c4 83       	std	Z+4, r28	; 0x04
     d22:	d0 93 30 04 	sts	0x0430, r29	; 0x800430 <OSTCBList+0x1>
     d26:	c0 93 2f 04 	sts	0x042F, r28	; 0x80042f <OSTCBList>
     d2a:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <OSRdyGrp>
     d2e:	9d 85       	ldd	r25, Y+13	; 0x0d
     d30:	89 2b       	or	r24, r25
     d32:	80 93 3a 04 	sts	0x043A, r24	; 0x80043a <OSRdyGrp>
     d36:	eb 85       	ldd	r30, Y+11	; 0x0b
     d38:	f0 e0       	ldi	r31, 0x00	; 0
     d3a:	e5 5c       	subi	r30, 0xC5	; 197
     d3c:	fb 4f       	sbci	r31, 0xFB	; 251
     d3e:	80 81       	ld	r24, Z
     d40:	9c 85       	ldd	r25, Y+12	; 0x0c
     d42:	89 2b       	or	r24, r25
     d44:	80 83       	st	Z, r24
     d46:	78 94       	sei
     d48:	80 e0       	ldi	r24, 0x00	; 0
     d4a:	df 91       	pop	r29
     d4c:	cf 91       	pop	r28
     d4e:	1f 91       	pop	r17
     d50:	08 95       	ret
     d52:	78 94       	sei
     d54:	86 e4       	ldi	r24, 0x46	; 70
     d56:	f9 cf       	rjmp	.-14     	; 0xd4a <OS_TCBInit+0xb6>

00000d58 <OSTaskCreate>:
     d58:	9f 92       	push	r9
     d5a:	af 92       	push	r10
     d5c:	bf 92       	push	r11
     d5e:	cf 92       	push	r12
     d60:	df 92       	push	r13
     d62:	ef 92       	push	r14
     d64:	ff 92       	push	r15
     d66:	0f 93       	push	r16
     d68:	1f 93       	push	r17
     d6a:	cf 93       	push	r28
     d6c:	df 93       	push	r29
     d6e:	f8 94       	cli
     d70:	c2 2f       	mov	r28, r18
     d72:	d0 e0       	ldi	r29, 0x00	; 0
     d74:	cc 0f       	add	r28, r28
     d76:	dd 1f       	adc	r29, r29
     d78:	cf 57       	subi	r28, 0x7F	; 127
     d7a:	da 4f       	sbci	r29, 0xFA	; 250
     d7c:	e8 81       	ld	r30, Y
     d7e:	f9 81       	ldd	r31, Y+1	; 0x01
     d80:	ef 2b       	or	r30, r31
     d82:	09 f0       	breq	.+2      	; 0xd86 <OSTaskCreate+0x2e>
     d84:	3b c0       	rjmp	.+118    	; 0xdfc <OSTaskCreate+0xa4>
     d86:	92 2e       	mov	r9, r18
     d88:	21 e0       	ldi	r18, 0x01	; 1
     d8a:	30 e0       	ldi	r19, 0x00	; 0
     d8c:	39 83       	std	Y+1, r19	; 0x01
     d8e:	28 83       	st	Y, r18
     d90:	78 94       	sei
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	20 e0       	ldi	r18, 0x00	; 0
     d96:	0e 94 8e 04 	call	0x91c	; 0x91c <OSTaskStkInit>
     d9a:	b1 2c       	mov	r11, r1
     d9c:	a1 2c       	mov	r10, r1
     d9e:	d1 2c       	mov	r13, r1
     da0:	c1 2c       	mov	r12, r1
     da2:	e1 2c       	mov	r14, r1
     da4:	f1 2c       	mov	r15, r1
     da6:	87 01       	movw	r16, r14
     da8:	30 e0       	ldi	r19, 0x00	; 0
     daa:	20 e0       	ldi	r18, 0x00	; 0
     dac:	50 e0       	ldi	r21, 0x00	; 0
     dae:	40 e0       	ldi	r20, 0x00	; 0
     db0:	bc 01       	movw	r22, r24
     db2:	89 2d       	mov	r24, r9
     db4:	0e 94 4a 06 	call	0xc94	; 0xc94 <OS_TCBInit>
     db8:	18 2f       	mov	r17, r24
     dba:	81 11       	cpse	r24, r1
     dbc:	1a c0       	rjmp	.+52     	; 0xdf2 <OSTaskCreate+0x9a>
     dbe:	f8 94       	cli
     dc0:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <OSTaskCtr>
     dc4:	8f 5f       	subi	r24, 0xFF	; 255
     dc6:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <OSTaskCtr>
     dca:	78 94       	sei
     dcc:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <OSRunning>
     dd0:	81 30       	cpi	r24, 0x01	; 1
     dd2:	11 f4       	brne	.+4      	; 0xdd8 <OSTaskCreate+0x80>
     dd4:	0e 94 c9 05 	call	0xb92	; 0xb92 <OS_Sched>
     dd8:	81 2f       	mov	r24, r17
     dda:	df 91       	pop	r29
     ddc:	cf 91       	pop	r28
     dde:	1f 91       	pop	r17
     de0:	0f 91       	pop	r16
     de2:	ff 90       	pop	r15
     de4:	ef 90       	pop	r14
     de6:	df 90       	pop	r13
     de8:	cf 90       	pop	r12
     dea:	bf 90       	pop	r11
     dec:	af 90       	pop	r10
     dee:	9f 90       	pop	r9
     df0:	08 95       	ret
     df2:	f8 94       	cli
     df4:	19 82       	std	Y+1, r1	; 0x01
     df6:	18 82       	st	Y, r1
     df8:	78 94       	sei
     dfa:	ee cf       	rjmp	.-36     	; 0xdd8 <OSTaskCreate+0x80>
     dfc:	78 94       	sei
     dfe:	18 e2       	ldi	r17, 0x28	; 40
     e00:	eb cf       	rjmp	.-42     	; 0xdd8 <OSTaskCreate+0x80>

00000e02 <OSInit>:
     e02:	0e 94 dd 04 	call	0x9ba	; 0x9ba <OSInitHookBegin>
     e06:	10 92 3f 04 	sts	0x043F, r1	; 0x80043f <OSIntNesting>
     e0a:	10 92 27 04 	sts	0x0427, r1	; 0x800427 <OSLockNesting>
     e0e:	10 92 37 04 	sts	0x0437, r1	; 0x800437 <OSTaskCtr>
     e12:	10 92 28 04 	sts	0x0428, r1	; 0x800428 <OSRunning>
     e16:	10 92 31 04 	sts	0x0431, r1	; 0x800431 <OSCtxSwCtr>
     e1a:	10 92 32 04 	sts	0x0432, r1	; 0x800432 <OSCtxSwCtr+0x1>
     e1e:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <OSCtxSwCtr+0x2>
     e22:	10 92 34 04 	sts	0x0434, r1	; 0x800434 <OSCtxSwCtr+0x3>
     e26:	10 92 29 04 	sts	0x0429, r1	; 0x800429 <OSIdleCtr>
     e2a:	10 92 2a 04 	sts	0x042A, r1	; 0x80042a <OSIdleCtr+0x1>
     e2e:	10 92 2b 04 	sts	0x042B, r1	; 0x80042b <OSIdleCtr+0x2>
     e32:	10 92 2c 04 	sts	0x042C, r1	; 0x80042c <OSIdleCtr+0x3>
     e36:	10 92 3a 04 	sts	0x043A, r1	; 0x80043a <OSRdyGrp>
     e3a:	10 92 3b 04 	sts	0x043B, r1	; 0x80043b <OSRdyTbl>
     e3e:	10 92 3c 04 	sts	0x043C, r1	; 0x80043c <OSRdyTbl+0x1>
     e42:	10 92 3d 04 	sts	0x043D, r1	; 0x80043d <OSRdyTbl+0x2>
     e46:	10 92 2e 04 	sts	0x042E, r1	; 0x80042e <OSPrioCur>
     e4a:	10 92 2d 04 	sts	0x042D, r1	; 0x80042d <OSPrioHighRdy>
     e4e:	10 92 39 04 	sts	0x0439, r1	; 0x800439 <OSTCBHighRdy+0x1>
     e52:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <OSTCBHighRdy>
     e56:	10 92 41 04 	sts	0x0441, r1	; 0x800441 <OSTCBCur+0x1>
     e5a:	10 92 40 04 	sts	0x0440, r1	; 0x800440 <OSTCBCur>
     e5e:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <OSTCBList+0x1>
     e62:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <OSTCBList>
     e66:	e1 e8       	ldi	r30, 0x81	; 129
     e68:	f5 e0       	ldi	r31, 0x05	; 5
     e6a:	11 92       	st	Z+, r1
     e6c:	11 92       	st	Z+, r1
     e6e:	85 e0       	ldi	r24, 0x05	; 5
     e70:	e3 3a       	cpi	r30, 0xA3	; 163
     e72:	f8 07       	cpc	r31, r24
     e74:	d1 f7       	brne	.-12     	; 0xe6a <OSInit+0x68>
     e76:	e2 e8       	ldi	r30, 0x82	; 130
     e78:	f4 e0       	ldi	r31, 0x04	; 4
     e7a:	cf 01       	movw	r24, r30
     e7c:	0f 96       	adiw	r24, 0x0f	; 15
     e7e:	93 83       	std	Z+3, r25	; 0x03
     e80:	82 83       	std	Z+2, r24	; 0x02
     e82:	fc 01       	movw	r30, r24
     e84:	85 e0       	ldi	r24, 0x05	; 5
     e86:	e2 37       	cpi	r30, 0x72	; 114
     e88:	f8 07       	cpc	r31, r24
     e8a:	b9 f7       	brne	.-18     	; 0xe7a <OSInit+0x78>
     e8c:	10 92 75 05 	sts	0x0575, r1	; 0x800575 <OSTCBTbl+0xf3>
     e90:	10 92 74 05 	sts	0x0574, r1	; 0x800574 <OSTCBTbl+0xf2>
     e94:	82 e8       	ldi	r24, 0x82	; 130
     e96:	94 e0       	ldi	r25, 0x04	; 4
     e98:	90 93 36 04 	sts	0x0436, r25	; 0x800436 <OSTCBFreeList+0x1>
     e9c:	80 93 35 04 	sts	0x0435, r24	; 0x800435 <OSTCBFreeList>
     ea0:	20 e1       	ldi	r18, 0x10	; 16
     ea2:	41 e8       	ldi	r20, 0x81	; 129
     ea4:	54 e0       	ldi	r21, 0x04	; 4
     ea6:	70 e0       	ldi	r23, 0x00	; 0
     ea8:	60 e0       	ldi	r22, 0x00	; 0
     eaa:	81 ee       	ldi	r24, 0xE1	; 225
     eac:	94 e0       	ldi	r25, 0x04	; 4
     eae:	0e 94 ac 06 	call	0xd58	; 0xd58 <OSTaskCreate>
     eb2:	0c 94 de 04 	jmp	0x9bc	; 0x9bc <OSInitHookEnd>

00000eb6 <OSTaskDel>:
     eb6:	ff 92       	push	r15
     eb8:	0f 93       	push	r16
     eba:	1f 93       	push	r17
     ebc:	cf 93       	push	r28
     ebe:	df 93       	push	r29
     ec0:	f0 90 3f 04 	lds	r15, 0x043F	; 0x80043f <OSIntNesting>
     ec4:	f1 10       	cpse	r15, r1
     ec6:	76 c0       	rjmp	.+236    	; 0xfb4 <OSTaskDel+0xfe>
     ec8:	f8 94       	cli
     eca:	8f 3f       	cpi	r24, 0xFF	; 255
     ecc:	29 f4       	brne	.+10     	; 0xed8 <OSTaskDel+0x22>
     ece:	e0 91 40 04 	lds	r30, 0x0440	; 0x800440 <OSTCBCur>
     ed2:	f0 91 41 04 	lds	r31, 0x0441	; 0x800441 <OSTCBCur+0x1>
     ed6:	81 85       	ldd	r24, Z+9	; 0x09
     ed8:	08 2f       	mov	r16, r24
     eda:	10 e0       	ldi	r17, 0x00	; 0
     edc:	00 0f       	add	r16, r16
     ede:	11 1f       	adc	r17, r17
     ee0:	f8 01       	movw	r30, r16
     ee2:	ef 57       	subi	r30, 0x7F	; 127
     ee4:	fa 4f       	sbci	r31, 0xFA	; 250
     ee6:	c0 81       	ld	r28, Z
     ee8:	d1 81       	ldd	r29, Z+1	; 0x01
     eea:	20 97       	sbiw	r28, 0x00	; 0
     eec:	09 f4       	brne	.+2      	; 0xef0 <OSTaskDel+0x3a>
     eee:	5e c0       	rjmp	.+188    	; 0xfac <OSTaskDel+0xf6>
     ef0:	eb 85       	ldd	r30, Y+11	; 0x0b
     ef2:	f0 e0       	ldi	r31, 0x00	; 0
     ef4:	8c 85       	ldd	r24, Y+12	; 0x0c
     ef6:	80 95       	com	r24
     ef8:	e5 5c       	subi	r30, 0xC5	; 197
     efa:	fb 4f       	sbci	r31, 0xFB	; 251
     efc:	90 81       	ld	r25, Z
     efe:	89 23       	and	r24, r25
     f00:	80 83       	st	Z, r24
     f02:	81 11       	cpse	r24, r1
     f04:	08 c0       	rjmp	.+16     	; 0xf16 <OSTaskDel+0x60>
     f06:	8d 85       	ldd	r24, Y+13	; 0x0d
     f08:	98 2f       	mov	r25, r24
     f0a:	90 95       	com	r25
     f0c:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <OSRdyGrp>
     f10:	89 23       	and	r24, r25
     f12:	80 93 3a 04 	sts	0x043A, r24	; 0x80043a <OSRdyGrp>
     f16:	1f 82       	std	Y+7, r1	; 0x07
     f18:	1e 82       	std	Y+6, r1	; 0x06
     f1a:	18 86       	std	Y+8, r1	; 0x08
     f1c:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <OSLockNesting>
     f20:	8f 3f       	cpi	r24, 0xFF	; 255
     f22:	19 f0       	breq	.+6      	; 0xf2a <OSTaskDel+0x74>
     f24:	8f 5f       	subi	r24, 0xFF	; 255
     f26:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <OSLockNesting>
     f2a:	78 94       	sei
     f2c:	f8 94       	cli
     f2e:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <OSLockNesting>
     f32:	88 23       	and	r24, r24
     f34:	19 f0       	breq	.+6      	; 0xf3c <OSTaskDel+0x86>
     f36:	81 50       	subi	r24, 0x01	; 1
     f38:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <OSLockNesting>
     f3c:	ce 01       	movw	r24, r28
     f3e:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <OSTaskDelHook>
     f42:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <OSTaskCtr>
     f46:	81 50       	subi	r24, 0x01	; 1
     f48:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <OSTaskCtr>
     f4c:	f8 01       	movw	r30, r16
     f4e:	ef 57       	subi	r30, 0x7F	; 127
     f50:	fa 4f       	sbci	r31, 0xFA	; 250
     f52:	11 82       	std	Z+1, r1	; 0x01
     f54:	10 82       	st	Z, r1
     f56:	ec 81       	ldd	r30, Y+4	; 0x04
     f58:	fd 81       	ldd	r31, Y+5	; 0x05
     f5a:	aa 81       	ldd	r26, Y+2	; 0x02
     f5c:	bb 81       	ldd	r27, Y+3	; 0x03
     f5e:	30 97       	sbiw	r30, 0x00	; 0
     f60:	e1 f4       	brne	.+56     	; 0xf9a <OSTaskDel+0xe4>
     f62:	15 96       	adiw	r26, 0x05	; 5
     f64:	1c 92       	st	X, r1
     f66:	1e 92       	st	-X, r1
     f68:	14 97       	sbiw	r26, 0x04	; 4
     f6a:	b0 93 30 04 	sts	0x0430, r27	; 0x800430 <OSTCBList+0x1>
     f6e:	a0 93 2f 04 	sts	0x042F, r26	; 0x80042f <OSTCBList>
     f72:	80 91 35 04 	lds	r24, 0x0435	; 0x800435 <OSTCBFreeList>
     f76:	90 91 36 04 	lds	r25, 0x0436	; 0x800436 <OSTCBFreeList+0x1>
     f7a:	9b 83       	std	Y+3, r25	; 0x03
     f7c:	8a 83       	std	Y+2, r24	; 0x02
     f7e:	d0 93 36 04 	sts	0x0436, r29	; 0x800436 <OSTCBFreeList+0x1>
     f82:	c0 93 35 04 	sts	0x0435, r28	; 0x800435 <OSTCBFreeList>
     f86:	78 94       	sei
     f88:	0e 94 c9 05 	call	0xb92	; 0xb92 <OS_Sched>
     f8c:	8f 2d       	mov	r24, r15
     f8e:	df 91       	pop	r29
     f90:	cf 91       	pop	r28
     f92:	1f 91       	pop	r17
     f94:	0f 91       	pop	r16
     f96:	ff 90       	pop	r15
     f98:	08 95       	ret
     f9a:	b3 83       	std	Z+3, r27	; 0x03
     f9c:	a2 83       	std	Z+2, r26	; 0x02
     f9e:	aa 81       	ldd	r26, Y+2	; 0x02
     fa0:	bb 81       	ldd	r27, Y+3	; 0x03
     fa2:	15 96       	adiw	r26, 0x05	; 5
     fa4:	fc 93       	st	X, r31
     fa6:	ee 93       	st	-X, r30
     fa8:	14 97       	sbiw	r26, 0x04	; 4
     faa:	e3 cf       	rjmp	.-58     	; 0xf72 <OSTaskDel+0xbc>
     fac:	78 94       	sei
     fae:	9c e3       	ldi	r25, 0x3C	; 60
     fb0:	f9 2e       	mov	r15, r25
     fb2:	ec cf       	rjmp	.-40     	; 0xf8c <OSTaskDel+0xd6>
     fb4:	8f e3       	ldi	r24, 0x3F	; 63
     fb6:	f8 2e       	mov	r15, r24
     fb8:	e9 cf       	rjmp	.-46     	; 0xf8c <OSTaskDel+0xd6>

00000fba <OSTaskDelReq>:
     fba:	8f 3f       	cpi	r24, 0xFF	; 255
     fbc:	41 f4       	brne	.+16     	; 0xfce <OSTaskDelReq+0x14>
     fbe:	f8 94       	cli
     fc0:	e0 91 40 04 	lds	r30, 0x0440	; 0x800440 <OSTCBCur>
     fc4:	f0 91 41 04 	lds	r31, 0x0441	; 0x800441 <OSTCBCur+0x1>
     fc8:	86 85       	ldd	r24, Z+14	; 0x0e
     fca:	78 94       	sei
     fcc:	08 95       	ret
     fce:	f8 94       	cli
     fd0:	e8 2f       	mov	r30, r24
     fd2:	f0 e0       	ldi	r31, 0x00	; 0
     fd4:	ee 0f       	add	r30, r30
     fd6:	ff 1f       	adc	r31, r31
     fd8:	ef 57       	subi	r30, 0x7F	; 127
     fda:	fa 4f       	sbci	r31, 0xFA	; 250
     fdc:	01 90       	ld	r0, Z+
     fde:	f0 81       	ld	r31, Z
     fe0:	e0 2d       	mov	r30, r0
     fe2:	8b e0       	ldi	r24, 0x0B	; 11
     fe4:	30 97       	sbiw	r30, 0x00	; 0
     fe6:	89 f3       	breq	.-30     	; 0xfca <OSTaskDelReq+0x10>
     fe8:	8e e3       	ldi	r24, 0x3E	; 62
     fea:	86 87       	std	Z+14, r24	; 0x0e
     fec:	80 e0       	ldi	r24, 0x00	; 0
     fee:	ed cf       	rjmp	.-38     	; 0xfca <OSTaskDelReq+0x10>

00000ff0 <OSTimeDly>:
     ff0:	00 97       	sbiw	r24, 0x00	; 0
     ff2:	11 f0       	breq	.+4      	; 0xff8 <OSTimeDly+0x8>
     ff4:	0c 94 24 06 	jmp	0xc48	; 0xc48 <OSTimeDly.part.0>
     ff8:	08 95       	ret

00000ffa <OSTimeDlyHMSM>:
     ffa:	cf 92       	push	r12
     ffc:	df 92       	push	r13
     ffe:	ef 92       	push	r14
    1000:	ff 92       	push	r15
    1002:	81 11       	cpse	r24, r1
    1004:	0d c0       	rjmp	.+26     	; 0x1020 <OSTimeDlyHMSM+0x26>
    1006:	61 11       	cpse	r22, r1
    1008:	0b c0       	rjmp	.+22     	; 0x1020 <OSTimeDlyHMSM+0x26>
    100a:	41 11       	cpse	r20, r1
    100c:	0c c0       	rjmp	.+24     	; 0x1026 <OSTimeDlyHMSM+0x2c>
    100e:	21 15       	cp	r18, r1
    1010:	31 05       	cpc	r19, r1
    1012:	61 f4       	brne	.+24     	; 0x102c <OSTimeDlyHMSM+0x32>
    1014:	84 e5       	ldi	r24, 0x54	; 84
    1016:	ff 90       	pop	r15
    1018:	ef 90       	pop	r14
    101a:	df 90       	pop	r13
    101c:	cf 90       	pop	r12
    101e:	08 95       	ret
    1020:	6c 33       	cpi	r22, 0x3C	; 60
    1022:	08 f0       	brcs	.+2      	; 0x1026 <OSTimeDlyHMSM+0x2c>
    1024:	4f c0       	rjmp	.+158    	; 0x10c4 <OSTimeDlyHMSM+0xca>
    1026:	4c 33       	cpi	r20, 0x3C	; 60
    1028:	08 f0       	brcs	.+2      	; 0x102c <OSTimeDlyHMSM+0x32>
    102a:	4e c0       	rjmp	.+156    	; 0x10c8 <OSTimeDlyHMSM+0xce>
    102c:	28 3e       	cpi	r18, 0xE8	; 232
    102e:	93 e0       	ldi	r25, 0x03	; 3
    1030:	39 07       	cpc	r19, r25
    1032:	08 f0       	brcs	.+2      	; 0x1036 <OSTimeDlyHMSM+0x3c>
    1034:	4b c0       	rjmp	.+150    	; 0x10cc <OSTimeDlyHMSM+0xd2>
    1036:	f9 01       	movw	r30, r18
    1038:	58 2f       	mov	r21, r24
    103a:	26 2f       	mov	r18, r22
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	ac e3       	ldi	r26, 0x3C	; 60
    1040:	b0 e0       	ldi	r27, 0x00	; 0
    1042:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__umulhisi3>
    1046:	6b 01       	movw	r12, r22
    1048:	7c 01       	movw	r14, r24
    104a:	c4 0e       	add	r12, r20
    104c:	d1 1c       	adc	r13, r1
    104e:	e1 1c       	adc	r14, r1
    1050:	f1 1c       	adc	r15, r1
    1052:	25 2f       	mov	r18, r21
    1054:	30 e0       	ldi	r19, 0x00	; 0
    1056:	a0 e1       	ldi	r26, 0x10	; 16
    1058:	be e0       	ldi	r27, 0x0E	; 14
    105a:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__umulhisi3>
    105e:	a7 01       	movw	r20, r14
    1060:	96 01       	movw	r18, r12
    1062:	26 0f       	add	r18, r22
    1064:	37 1f       	adc	r19, r23
    1066:	48 1f       	adc	r20, r24
    1068:	59 1f       	adc	r21, r25
    106a:	a4 e6       	ldi	r26, 0x64	; 100
    106c:	b0 e0       	ldi	r27, 0x00	; 0
    106e:	0e 94 e5 08 	call	0x11ca	; 0x11ca <__muluhisi3>
    1072:	6b 01       	movw	r12, r22
    1074:	7c 01       	movw	r14, r24
    1076:	9f 01       	movw	r18, r30
    1078:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__umulhisi3>
    107c:	6c 50       	subi	r22, 0x0C	; 12
    107e:	7e 4f       	sbci	r23, 0xFE	; 254
    1080:	8f 4f       	sbci	r24, 0xFF	; 255
    1082:	9f 4f       	sbci	r25, 0xFF	; 255
    1084:	28 ee       	ldi	r18, 0xE8	; 232
    1086:	33 e0       	ldi	r19, 0x03	; 3
    1088:	40 e0       	ldi	r20, 0x00	; 0
    108a:	50 e0       	ldi	r21, 0x00	; 0
    108c:	0e 94 b4 08 	call	0x1168	; 0x1168 <__udivmodsi4>
    1090:	d7 01       	movw	r26, r14
    1092:	c6 01       	movw	r24, r12
    1094:	82 0f       	add	r24, r18
    1096:	93 1f       	adc	r25, r19
    1098:	a4 1f       	adc	r26, r20
    109a:	b5 1f       	adc	r27, r21
    109c:	7d 01       	movw	r14, r26
    109e:	0e 94 f8 07 	call	0xff0	; 0xff0 <OSTimeDly>
    10a2:	e1 14       	cp	r14, r1
    10a4:	f1 04       	cpc	r15, r1
    10a6:	11 f4       	brne	.+4      	; 0x10ac <OSTimeDlyHMSM+0xb2>
    10a8:	80 e0       	ldi	r24, 0x00	; 0
    10aa:	b5 cf       	rjmp	.-150    	; 0x1016 <OSTimeDlyHMSM+0x1c>
    10ac:	80 e0       	ldi	r24, 0x00	; 0
    10ae:	90 e8       	ldi	r25, 0x80	; 128
    10b0:	0e 94 24 06 	call	0xc48	; 0xc48 <OSTimeDly.part.0>
    10b4:	80 e0       	ldi	r24, 0x00	; 0
    10b6:	90 e8       	ldi	r25, 0x80	; 128
    10b8:	0e 94 24 06 	call	0xc48	; 0xc48 <OSTimeDly.part.0>
    10bc:	81 e0       	ldi	r24, 0x01	; 1
    10be:	e8 1a       	sub	r14, r24
    10c0:	f1 08       	sbc	r15, r1
    10c2:	ef cf       	rjmp	.-34     	; 0x10a2 <OSTimeDlyHMSM+0xa8>
    10c4:	81 e5       	ldi	r24, 0x51	; 81
    10c6:	a7 cf       	rjmp	.-178    	; 0x1016 <OSTimeDlyHMSM+0x1c>
    10c8:	82 e5       	ldi	r24, 0x52	; 82
    10ca:	a5 cf       	rjmp	.-182    	; 0x1016 <OSTimeDlyHMSM+0x1c>
    10cc:	83 e5       	ldi	r24, 0x53	; 83
    10ce:	a3 cf       	rjmp	.-186    	; 0x1016 <OSTimeDlyHMSM+0x1c>

000010d0 <main>:

}

int main( void )
{
 robo_Setup(); /* initialize HAL for RoboKar */
    10d0:	0e 94 b3 02 	call	0x566	; 0x566 <robo_Setup>
 OSInit(); /* initialize UCOS-II kernel */
    10d4:	0e 94 01 07 	call	0xe02	; 0xe02 <OSInit>

 robo_motorSpeed(STOP_SPEED, STOP_SPEED); /* Stop the robot, value STOP_SPEED == 0 */
    10d8:	70 e0       	ldi	r23, 0x00	; 0
    10da:	60 e0       	ldi	r22, 0x00	; 0
    10dc:	90 e0       	ldi	r25, 0x00	; 0
    10de:	80 e0       	ldi	r24, 0x00	; 0
    10e0:	0e 94 d6 01 	call	0x3ac	; 0x3ac <robo_motorSpeed>
 myrobot.rspeed = STOP_SPEED; /* Initialize myrobot states */
    10e4:	10 92 9b 02 	sts	0x029B, r1	; 0x80029b <myrobot+0x1>
    10e8:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <myrobot>
 myrobot.lspeed = STOP_SPEED;
    10ec:	10 92 9d 02 	sts	0x029D, r1	; 0x80029d <myrobot+0x3>
    10f0:	10 92 9c 02 	sts	0x029C, r1	; 0x80029c <myrobot+0x2>
 myrobot.obstacle = 0; /* No collisioin */
    10f4:	10 92 9e 02 	sts	0x029E, r1	; 0x80029e <myrobot+0x4>

 OSTaskCreate(TaskStart, /* create TaskStart Task */
    10f8:	21 e0       	ldi	r18, 0x01	; 1
    10fa:	4e e9       	ldi	r20, 0x9E	; 158
    10fc:	53 e0       	ldi	r21, 0x03	; 3
    10fe:	70 e0       	ldi	r23, 0x00	; 0
    1100:	60 e0       	ldi	r22, 0x00	; 0
    1102:	85 ee       	ldi	r24, 0xE5	; 229
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	0e 94 ac 06 	call	0xd58	; 0xd58 <OSTaskCreate>
 (void *)0,
 (void *)&TaskStartStk[TASK_STK_SZ - 1],
 TASK_START_PRIO);
 robo_Honk(); robo_wait4goPress(); /* Wait for to GO */
    110a:	0e 94 79 02 	call	0x4f2	; 0x4f2 <robo_Honk>
    110e:	0e 94 9f 02 	call	0x53e	; 0x53e <robo_wait4goPress>
 OSStart(); /* Start multitasking */
    1112:	0e 94 65 05 	call	0xaca	; 0xaca <OSStart>
    1116:	ff cf       	rjmp	.-2      	; 0x1116 <main+0x46>

00001118 <__udivmodhi4>:
    1118:	aa 1b       	sub	r26, r26
    111a:	bb 1b       	sub	r27, r27
    111c:	51 e1       	ldi	r21, 0x11	; 17
    111e:	07 c0       	rjmp	.+14     	; 0x112e <__udivmodhi4_ep>

00001120 <__udivmodhi4_loop>:
    1120:	aa 1f       	adc	r26, r26
    1122:	bb 1f       	adc	r27, r27
    1124:	a6 17       	cp	r26, r22
    1126:	b7 07       	cpc	r27, r23
    1128:	10 f0       	brcs	.+4      	; 0x112e <__udivmodhi4_ep>
    112a:	a6 1b       	sub	r26, r22
    112c:	b7 0b       	sbc	r27, r23

0000112e <__udivmodhi4_ep>:
    112e:	88 1f       	adc	r24, r24
    1130:	99 1f       	adc	r25, r25
    1132:	5a 95       	dec	r21
    1134:	a9 f7       	brne	.-22     	; 0x1120 <__udivmodhi4_loop>
    1136:	80 95       	com	r24
    1138:	90 95       	com	r25
    113a:	bc 01       	movw	r22, r24
    113c:	cd 01       	movw	r24, r26
    113e:	08 95       	ret

00001140 <__divmodhi4>:
    1140:	97 fb       	bst	r25, 7
    1142:	07 2e       	mov	r0, r23
    1144:	16 f4       	brtc	.+4      	; 0x114a <__divmodhi4+0xa>
    1146:	00 94       	com	r0
    1148:	07 d0       	rcall	.+14     	; 0x1158 <__divmodhi4_neg1>
    114a:	77 fd       	sbrc	r23, 7
    114c:	09 d0       	rcall	.+18     	; 0x1160 <__divmodhi4_neg2>
    114e:	0e 94 8c 08 	call	0x1118	; 0x1118 <__udivmodhi4>
    1152:	07 fc       	sbrc	r0, 7
    1154:	05 d0       	rcall	.+10     	; 0x1160 <__divmodhi4_neg2>
    1156:	3e f4       	brtc	.+14     	; 0x1166 <__divmodhi4_exit>

00001158 <__divmodhi4_neg1>:
    1158:	90 95       	com	r25
    115a:	81 95       	neg	r24
    115c:	9f 4f       	sbci	r25, 0xFF	; 255
    115e:	08 95       	ret

00001160 <__divmodhi4_neg2>:
    1160:	70 95       	com	r23
    1162:	61 95       	neg	r22
    1164:	7f 4f       	sbci	r23, 0xFF	; 255

00001166 <__divmodhi4_exit>:
    1166:	08 95       	ret

00001168 <__udivmodsi4>:
    1168:	a1 e2       	ldi	r26, 0x21	; 33
    116a:	1a 2e       	mov	r1, r26
    116c:	aa 1b       	sub	r26, r26
    116e:	bb 1b       	sub	r27, r27
    1170:	fd 01       	movw	r30, r26
    1172:	0d c0       	rjmp	.+26     	; 0x118e <__udivmodsi4_ep>

00001174 <__udivmodsi4_loop>:
    1174:	aa 1f       	adc	r26, r26
    1176:	bb 1f       	adc	r27, r27
    1178:	ee 1f       	adc	r30, r30
    117a:	ff 1f       	adc	r31, r31
    117c:	a2 17       	cp	r26, r18
    117e:	b3 07       	cpc	r27, r19
    1180:	e4 07       	cpc	r30, r20
    1182:	f5 07       	cpc	r31, r21
    1184:	20 f0       	brcs	.+8      	; 0x118e <__udivmodsi4_ep>
    1186:	a2 1b       	sub	r26, r18
    1188:	b3 0b       	sbc	r27, r19
    118a:	e4 0b       	sbc	r30, r20
    118c:	f5 0b       	sbc	r31, r21

0000118e <__udivmodsi4_ep>:
    118e:	66 1f       	adc	r22, r22
    1190:	77 1f       	adc	r23, r23
    1192:	88 1f       	adc	r24, r24
    1194:	99 1f       	adc	r25, r25
    1196:	1a 94       	dec	r1
    1198:	69 f7       	brne	.-38     	; 0x1174 <__udivmodsi4_loop>
    119a:	60 95       	com	r22
    119c:	70 95       	com	r23
    119e:	80 95       	com	r24
    11a0:	90 95       	com	r25
    11a2:	9b 01       	movw	r18, r22
    11a4:	ac 01       	movw	r20, r24
    11a6:	bd 01       	movw	r22, r26
    11a8:	cf 01       	movw	r24, r30
    11aa:	08 95       	ret

000011ac <__umulhisi3>:
    11ac:	a2 9f       	mul	r26, r18
    11ae:	b0 01       	movw	r22, r0
    11b0:	b3 9f       	mul	r27, r19
    11b2:	c0 01       	movw	r24, r0
    11b4:	a3 9f       	mul	r26, r19
    11b6:	70 0d       	add	r23, r0
    11b8:	81 1d       	adc	r24, r1
    11ba:	11 24       	eor	r1, r1
    11bc:	91 1d       	adc	r25, r1
    11be:	b2 9f       	mul	r27, r18
    11c0:	70 0d       	add	r23, r0
    11c2:	81 1d       	adc	r24, r1
    11c4:	11 24       	eor	r1, r1
    11c6:	91 1d       	adc	r25, r1
    11c8:	08 95       	ret

000011ca <__muluhisi3>:
    11ca:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__umulhisi3>
    11ce:	a5 9f       	mul	r26, r21
    11d0:	90 0d       	add	r25, r0
    11d2:	b4 9f       	mul	r27, r20
    11d4:	90 0d       	add	r25, r0
    11d6:	a4 9f       	mul	r26, r20
    11d8:	80 0d       	add	r24, r0
    11da:	91 1d       	adc	r25, r1
    11dc:	11 24       	eor	r1, r1
    11de:	08 95       	ret

000011e0 <_exit>:
    11e0:	f8 94       	cli

000011e2 <__stop_program>:
    11e2:	ff cf       	rjmp	.-2      	; 0x11e2 <__stop_program>
